### YamlMime:ManagedReference
items:
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  commentId: T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  id: HttpRequestMessageFactory
  parent: Geko.HttpClientService.Infrastructure
  children:
  - Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions})
  - Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  langs:
  - csharp
  - vb
  name: HttpRequestMessageFactory
  nameWithType: HttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  type: Class
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactory.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: HttpRequestMessageFactory
    path: ../src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactory.cs
    startLine: 9
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nA <see cref=\"!:HttpRequestMessage\"></see> factory.\n"
  example: []
  syntax:
    content: 'public class HttpRequestMessageFactory : IHttpRequestMessageFactory'
    content.vb: >-
      Public Class HttpRequestMessageFactory
          Implements IHttpRequestMessageFactory
  inheritance:
  - System.Object
  implements:
  - Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions})
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions})
  id: '#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions})'
  parent: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  langs:
  - csharp
  - vb
  name: HttpRequestMessageFactory(IHttpContextAccessor, IOptions<HttpClientServiceOptions>)
  nameWithType: HttpRequestMessageFactory.HttpRequestMessageFactory(IHttpContextAccessor, IOptions<HttpClientServiceOptions>)
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.HttpRequestMessageFactory(Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.Extensions.Options.IOptions<Geko.HttpClientService.Models.HttpClientServiceOptions>)
  type: Constructor
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactory.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: .ctor
    path: ../src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactory.cs
    startLine: 19
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nConstructor of the  <xref href=\"Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public HttpRequestMessageFactory(IHttpContextAccessor httpContextAccessor, IOptions<HttpClientServiceOptions> options)
    parameters:
    - id: httpContextAccessor
      type: Microsoft.AspNetCore.Http.IHttpContextAccessor
      description: 'The <xref href="Microsoft.AspNetCore.Http.HttpContextAccessor" data-throw-if-not-resolved="false"></xref> object to access <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref>. '
    - id: options
      type: Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions}
      description: 'The HttpClientService options to use. '
    content.vb: Public Sub New(httpContextAccessor As IHttpContextAccessor, options As IOptions(Of HttpClientServiceOptions))
  overload: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor*
  nameWithType.vb: HttpRequestMessageFactory.HttpRequestMessageFactory(IHttpContextAccessor, IOptions(Of HttpClientServiceOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.HttpRequestMessageFactory(Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.Extensions.Options.IOptions(Of Geko.HttpClientService.Models.HttpClientServiceOptions))
  name.vb: HttpRequestMessageFactory(IHttpContextAccessor, IOptions(Of HttpClientServiceOptions))
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  id: CreateRequestMessage
  parent: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  langs:
  - csharp
  - vb
  name: CreateRequestMessage()
  nameWithType: HttpRequestMessageFactory.CreateRequestMessage()
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage()
  type: Method
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactory.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: CreateRequestMessage
    path: ../src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactory.cs
    startLine: 31
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nAdds an <code>X-HttpClientService</code> header in the newly created <see cref=\"!:HttpRequestMessage\"></see> by copying the <code>X-HttpClientService</code> of the current request.\nIf there is no current request or the current request does not contain a <code>X-HttpClientService</code> header, it creates a new one.\n"
  remarks: This is useful to track in the logs a series of cascading requests between services.
  example: []
  syntax:
    content: public HttpRequestMessage CreateRequestMessage()
    return:
      type: HttpRequestMessage
      description: An <see cref="!:HttpRequestMessage"></see> to be used by an <see cref="!:HttpClient"></see>.
    content.vb: Public Function CreateRequestMessage As HttpRequestMessage
  overload: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage*
  implements:
  - Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Geko.HttpClientService.Infrastructure
  commentId: N:Geko.HttpClientService.Infrastructure
  name: Geko.HttpClientService.Infrastructure
  nameWithType: Geko.HttpClientService.Infrastructure
  fullName: Geko.HttpClientService.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  commentId: T:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  parent: Geko.HttpClientService.Infrastructure
  name: IHttpRequestMessageFactory
  nameWithType: IHttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  commentId: T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  name: HttpRequestMessageFactory
  nameWithType: HttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
- uid: Microsoft.AspNetCore.Http.HttpContextAccessor
  commentId: T:Microsoft.AspNetCore.Http.HttpContextAccessor
  isExternal: true
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  isExternal: true
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor*
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor
  name: HttpRequestMessageFactory
  nameWithType: HttpRequestMessageFactory.HttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.HttpRequestMessageFactory
- uid: Microsoft.AspNetCore.Http.IHttpContextAccessor
  commentId: T:Microsoft.AspNetCore.Http.IHttpContextAccessor
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: Microsoft.AspNetCore.Http.IHttpContextAccessor
- uid: Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<HttpClientServiceOptions>
  nameWithType: IOptions<HttpClientServiceOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Geko.HttpClientService.Models.HttpClientServiceOptions>
  nameWithType.vb: IOptions(Of HttpClientServiceOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of Geko.HttpClientService.Models.HttpClientServiceOptions)
  name.vb: IOptions(Of HttpClientServiceOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Geko.HttpClientService.Models.HttpClientServiceOptions
    name: HttpClientServiceOptions
    nameWithType: HttpClientServiceOptions
    fullName: Geko.HttpClientService.Models.HttpClientServiceOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Geko.HttpClientService.Models.HttpClientServiceOptions
    name: HttpClientServiceOptions
    nameWithType: HttpClientServiceOptions
    fullName: Geko.HttpClientService.Models.HttpClientServiceOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage*
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  name: CreateRequestMessage
  nameWithType: HttpRequestMessageFactory.CreateRequestMessage
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
- uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  commentId: M:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  parent: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  name: CreateRequestMessage()
  nameWithType: IHttpRequestMessageFactory.CreateRequestMessage()
  fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage()
  spec.csharp:
  - uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
    name: CreateRequestMessage
    nameWithType: IHttpRequestMessageFactory.CreateRequestMessage
    fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
    name: CreateRequestMessage
    nameWithType: IHttpRequestMessageFactory.CreateRequestMessage
    fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpRequestMessage
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: HttpRequestMessage
