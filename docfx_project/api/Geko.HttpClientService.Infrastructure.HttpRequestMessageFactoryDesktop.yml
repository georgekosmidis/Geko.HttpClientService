### YamlMime:ManagedReference
items:
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  commentId: T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  id: HttpRequestMessageFactoryDesktop
  parent: Geko.HttpClientService.Infrastructure
  children:
  - Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor
  - Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  langs:
  - csharp
  - vb
  name: HttpRequestMessageFactoryDesktop
  nameWithType: HttpRequestMessageFactoryDesktop
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  type: Class
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactoryDesktop.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: HttpRequestMessageFactoryDesktop
    path: ../src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactoryDesktop.cs
    startLine: 5
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nA <see cref=\"!:HttpRequestMessage\"></see> factory.\n"
  example: []
  syntax:
    content: 'public class HttpRequestMessageFactoryDesktop : IHttpRequestMessageFactory'
    content.vb: >-
      Public Class HttpRequestMessageFactoryDesktop
          Implements IHttpRequestMessageFactory
  inheritance:
  - System.Object
  implements:
  - Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor
  id: '#ctor'
  parent: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  langs:
  - csharp
  - vb
  name: HttpRequestMessageFactoryDesktop()
  nameWithType: HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop()
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop()
  type: Constructor
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactoryDesktop.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: .ctor
    path: ../src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactoryDesktop.cs
    startLine: 11
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nConstructor of the  <xref href=\"Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public HttpRequestMessageFactoryDesktop()
    content.vb: Public Sub New
  overload: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  id: CreateRequestMessage
  parent: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  langs:
  - csharp
  - vb
  name: CreateRequestMessage()
  nameWithType: HttpRequestMessageFactoryDesktop.CreateRequestMessage()
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage()
  type: Method
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactoryDesktop.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: CreateRequestMessage
    path: ../src/Geko.HttpClientService/Infrastructure/Core/HttpRequestMessageFactoryDesktop.cs
    startLine: 19
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nCreates and returns a new <see cref=\"!:HttpRequestMessage\"></see>\n"
  example: []
  syntax:
    content: public HttpRequestMessage CreateRequestMessage()
    return:
      type: HttpRequestMessage
      description: An <see cref="!:HttpRequestMessage"></see> to be used by an <see cref="!:HttpClient"></see>.
    content.vb: Public Function CreateRequestMessage As HttpRequestMessage
  overload: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage*
  implements:
  - Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Geko.HttpClientService.Infrastructure
  commentId: N:Geko.HttpClientService.Infrastructure
  name: Geko.HttpClientService.Infrastructure
  nameWithType: Geko.HttpClientService.Infrastructure
  fullName: Geko.HttpClientService.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  commentId: T:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  parent: Geko.HttpClientService.Infrastructure
  name: IHttpRequestMessageFactory
  nameWithType: IHttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  commentId: T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  name: HttpRequestMessageFactory
  nameWithType: HttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor*
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor
  name: HttpRequestMessageFactoryDesktop
  nameWithType: HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage*
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  name: CreateRequestMessage
  nameWithType: HttpRequestMessageFactoryDesktop.CreateRequestMessage
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
- uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  commentId: M:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  parent: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  name: CreateRequestMessage()
  nameWithType: IHttpRequestMessageFactory.CreateRequestMessage()
  fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage()
  spec.csharp:
  - uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
    name: CreateRequestMessage
    nameWithType: IHttpRequestMessageFactory.CreateRequestMessage
    fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
    name: CreateRequestMessage
    nameWithType: IHttpRequestMessageFactory.CreateRequestMessage
    fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpRequestMessage
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: HttpRequestMessage
