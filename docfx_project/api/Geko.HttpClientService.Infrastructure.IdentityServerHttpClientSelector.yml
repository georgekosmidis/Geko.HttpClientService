### YamlMime:ManagedReference
items:
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  commentId: T:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  id: IdentityServerHttpClientSelector
  parent: Geko.HttpClientService.Infrastructure
  children:
  - Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor(IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient})
  - Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  langs:
  - csharp
  - vb
  name: IdentityServerHttpClientSelector
  nameWithType: IdentityServerHttpClientSelector
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  type: Class
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerHttpClientSelector.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: IdentityServerHttpClientSelector
    path: ../src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerHttpClientSelector.cs
    startLine: 7
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nSelects the correct <xref href=\"Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient\" data-throw-if-not-resolved=\"false\"></xref> based on <xref href=\"Geko.HttpClientService.Models.IIdentityServerOptions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class IdentityServerHttpClientSelector : IIdentityServerHttpClientSelector'
    content.vb: >-
      Public Class IdentityServerHttpClientSelector
          Implements IIdentityServerHttpClientSelector
  inheritance:
  - System.Object
  implements:
  - Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor(IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient})
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor(IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient})
  id: '#ctor(IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient})'
  parent: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  langs:
  - csharp
  - vb
  name: IdentityServerHttpClientSelector(IEnumerable<IIdentityServerHttpClient>)
  nameWithType: IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable<IIdentityServerHttpClient>)
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable<Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient>)
  type: Constructor
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerHttpClientSelector.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: .ctor
    path: ../src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerHttpClientSelector.cs
    startLine: 14
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nConstructor of the <xref href=\"Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IdentityServerHttpClientSelector(IEnumerable<IIdentityServerHttpClient> httpClients)
    parameters:
    - id: httpClients
      type: IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient}
    content.vb: Public Sub New(httpClients As IEnumerable(Of IIdentityServerHttpClient))
  overload: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor*
  nameWithType.vb: IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable(Of IIdentityServerHttpClient))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable(Of Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient))
  name.vb: IdentityServerHttpClientSelector(IEnumerable(Of IIdentityServerHttpClient))
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  id: Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  parent: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  langs:
  - csharp
  - vb
  name: Get(IIdentityServerOptions)
  nameWithType: IdentityServerHttpClientSelector.Get(IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  type: Method
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerHttpClientSelector.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: Get
    path: ../src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerHttpClientSelector.cs
    startLine: 24
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nFinds the appropriate implementation of <xref href=\"Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient\" data-throw-if-not-resolved=\"false\"></xref> based on the <code data-dev-comment-type=\"paramref\" class=\"paramref\">options</code>.\n"
  example: []
  syntax:
    content: public IIdentityServerHttpClient Get(IIdentityServerOptions options)
    parameters:
    - id: options
      type: Geko.HttpClientService.Models.IIdentityServerOptions
      description: The <code data-dev-comment-type="paramref" class="paramref">options</code> for retrieving an access token.
    return:
      type: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
      description: An <xref href="Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Get(options As IIdentityServerOptions) As IIdentityServerHttpClient
  overload: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get*
  implements:
  - Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
  commentId: T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
  parent: Geko.HttpClientService.Infrastructure
  name: IIdentityServerHttpClient
  nameWithType: IIdentityServerHttpClient
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
- uid: Geko.HttpClientService.Models.IIdentityServerOptions
  commentId: T:Geko.HttpClientService.Models.IIdentityServerOptions
  parent: Geko.HttpClientService.Models
  name: IIdentityServerOptions
  nameWithType: IIdentityServerOptions
  fullName: Geko.HttpClientService.Models.IIdentityServerOptions
- uid: Geko.HttpClientService.Infrastructure
  commentId: N:Geko.HttpClientService.Infrastructure
  name: Geko.HttpClientService.Infrastructure
  nameWithType: Geko.HttpClientService.Infrastructure
  fullName: Geko.HttpClientService.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  commentId: T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  parent: Geko.HttpClientService.Infrastructure
  name: IIdentityServerHttpClientSelector
  nameWithType: IIdentityServerHttpClientSelector
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Geko.HttpClientService.Models
  commentId: N:Geko.HttpClientService.Models
  name: Geko.HttpClientService.Models
  nameWithType: Geko.HttpClientService.Models
  fullName: Geko.HttpClientService.Models
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  commentId: T:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  name: IdentityServerHttpClientSelector
  nameWithType: IdentityServerHttpClientSelector
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor*
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor
  name: IdentityServerHttpClientSelector
  nameWithType: IdentityServerHttpClientSelector.IdentityServerHttpClientSelector
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.IdentityServerHttpClientSelector
- uid: IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient}
  commentId: '!:IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient}'
  definition: IEnumerable`1
  name: IEnumerable<IIdentityServerHttpClient>
  nameWithType: IEnumerable<IIdentityServerHttpClient>
  fullName: IEnumerable<Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient>
  nameWithType.vb: IEnumerable(Of IIdentityServerHttpClient)
  fullName.vb: IEnumerable(Of Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient)
  name.vb: IEnumerable(Of IIdentityServerHttpClient)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
    name: IIdentityServerHttpClient
    nameWithType: IIdentityServerHttpClient
    fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
    name: IIdentityServerHttpClient
    nameWithType: IIdentityServerHttpClient
    fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  commentId: '!:IEnumerable`1'
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get*
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get
  name: Get
  nameWithType: IdentityServerHttpClientSelector.Get
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  commentId: M:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  parent: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  name: Get(IIdentityServerOptions)
  nameWithType: IIdentityServerHttpClientSelector.Get(IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  spec.csharp:
  - uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
    name: Get
    nameWithType: IIdentityServerHttpClientSelector.Get
    fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: Geko.HttpClientService.Models.IIdentityServerOptions
    name: IIdentityServerOptions
    nameWithType: IIdentityServerOptions
    fullName: Geko.HttpClientService.Models.IIdentityServerOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
    name: Get
    nameWithType: IIdentityServerHttpClientSelector.Get
    fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: Geko.HttpClientService.Models.IIdentityServerOptions
    name: IIdentityServerOptions
    nameWithType: IIdentityServerOptions
    fullName: Geko.HttpClientService.Models.IIdentityServerOptions
  - name: )
    nameWithType: )
    fullName: )
