### YamlMime:ManagedReference
items:
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService
  commentId: T:Geko.HttpClientService.Infrastructure.IdentityServerService
  id: IdentityServerService
  parent: Geko.HttpClientService.Infrastructure
  children:
  - Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector,Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)
  - Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  langs:
  - csharp
  - vb
  name: IdentityServerService
  nameWithType: IdentityServerService
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService
  type: Class
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerService.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: IdentityServerService
    path: ../src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerService.cs
    startLine: 8
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nThe implementation of an access token service for client credentials based on IdentityServer4. \n"
  example: []
  syntax:
    content: 'public class IdentityServerService : IIdentityServerService'
    content.vb: >-
      Public Class IdentityServerService
          Implements IIdentityServerService
  inheritance:
  - System.Object
  implements:
  - Geko.HttpClientService.Infrastructure.IIdentityServerService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector,Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector,Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)
  id: '#ctor(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector,Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)'
  parent: Geko.HttpClientService.Infrastructure.IdentityServerService
  langs:
  - csharp
  - vb
  name: IdentityServerService(IIdentityServerHttpClientSelector, ITokenResponseCacheManager)
  nameWithType: IdentityServerService.IdentityServerService(IIdentityServerHttpClientSelector, ITokenResponseCacheManager)
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.IdentityServerService(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector, Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)
  type: Constructor
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerService.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: .ctor
    path: ../src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerService.cs
    startLine: 18
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nConstructor of the <xref href=\"Geko.HttpClientService.Infrastructure.IdentityServerService\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IdentityServerService(IIdentityServerHttpClientSelector identityServerHttpClientSelector, ITokenResponseCacheManager cache)
    parameters:
    - id: identityServerHttpClientSelector
      type: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
      description: An Identity Server HTTP client selected that will fetch the correct HTTP client.
    - id: cache
      type: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager
      description: A cache engine imlementation, to cache the token response.
    content.vb: Public Sub New(identityServerHttpClientSelector As IIdentityServerHttpClientSelector, cache As ITokenResponseCacheManager)
  overload: Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  id: GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  parent: Geko.HttpClientService.Infrastructure.IdentityServerService
  langs:
  - csharp
  - vb
  name: GetTokenResponseAsync(IIdentityServerOptions)
  nameWithType: IdentityServerService.GetTokenResponseAsync(IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  type: Method
  source:
    remote:
      path: src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerService.cs
      branch: release/3.0.0
      repo: https://github.com/georgekosmidis/System.Net.Http.HttpClientService.git
    id: GetTokenResponseAsync
    path: ../src/Geko.HttpClientService/Infrastructure/IdentityServer/IdentityServerService.cs
    startLine: 29
  assemblies:
  - Geko.HttpClientService
  namespace: Geko.HttpClientService.Infrastructure
  summary: "\nRetrieves either a new access token using client credentials or the last valid from the caching engine.\n"
  example: []
  syntax:
    content: public async Task<TokenResponse> GetTokenResponseAsync(IIdentityServerOptions options)
    parameters:
    - id: options
      type: Geko.HttpClientService.Models.IIdentityServerOptions
      description: The token service options.
    return:
      type: Task{IdentityModel.Client.TokenResponse}
      description: A <xref href="IdentityModel.Client.TokenResponse" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function GetTokenResponseAsync(options As IIdentityServerOptions) As Task(Of TokenResponse)
  overload: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync*
  implements:
  - Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Geko.HttpClientService.Infrastructure
  commentId: N:Geko.HttpClientService.Infrastructure
  name: Geko.HttpClientService.Infrastructure
  nameWithType: Geko.HttpClientService.Infrastructure
  fullName: Geko.HttpClientService.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerService
  commentId: T:Geko.HttpClientService.Infrastructure.IIdentityServerService
  parent: Geko.HttpClientService.Infrastructure
  name: IIdentityServerService
  nameWithType: IIdentityServerService
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService
  commentId: T:Geko.HttpClientService.Infrastructure.IdentityServerService
  name: IdentityServerService
  nameWithType: IdentityServerService
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor*
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor
  name: IdentityServerService
  nameWithType: IdentityServerService.IdentityServerService
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.IdentityServerService
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  commentId: T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  parent: Geko.HttpClientService.Infrastructure
  name: IIdentityServerHttpClientSelector
  nameWithType: IIdentityServerHttpClientSelector
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
- uid: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager
  commentId: T:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager
  parent: Geko.HttpClientService.Infrastructure
  name: ITokenResponseCacheManager
  nameWithType: ITokenResponseCacheManager
  fullName: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager
- uid: IdentityModel.Client.TokenResponse
  commentId: T:IdentityModel.Client.TokenResponse
  isExternal: true
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync*
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync
  name: GetTokenResponseAsync
  nameWithType: IdentityServerService.GetTokenResponseAsync
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  commentId: M:Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  parent: Geko.HttpClientService.Infrastructure.IIdentityServerService
  name: GetTokenResponseAsync(IIdentityServerOptions)
  nameWithType: IIdentityServerService.GetTokenResponseAsync(IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  spec.csharp:
  - uid: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
    name: GetTokenResponseAsync
    nameWithType: IIdentityServerService.GetTokenResponseAsync
    fullName: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Geko.HttpClientService.Models.IIdentityServerOptions
    name: IIdentityServerOptions
    nameWithType: IIdentityServerOptions
    fullName: Geko.HttpClientService.Models.IIdentityServerOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
    name: GetTokenResponseAsync
    nameWithType: IIdentityServerService.GetTokenResponseAsync
    fullName: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Geko.HttpClientService.Models.IIdentityServerOptions
    name: IIdentityServerOptions
    nameWithType: IIdentityServerOptions
    fullName: Geko.HttpClientService.Models.IIdentityServerOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Geko.HttpClientService.Models.IIdentityServerOptions
  commentId: T:Geko.HttpClientService.Models.IIdentityServerOptions
  parent: Geko.HttpClientService.Models
  name: IIdentityServerOptions
  nameWithType: IIdentityServerOptions
  fullName: Geko.HttpClientService.Models.IIdentityServerOptions
- uid: Task{IdentityModel.Client.TokenResponse}
  commentId: '!:Task{IdentityModel.Client.TokenResponse}'
  definition: Task`1
  name: Task<TokenResponse>
  nameWithType: Task<TokenResponse>
  fullName: Task<IdentityModel.Client.TokenResponse>
  nameWithType.vb: Task(Of TokenResponse)
  fullName.vb: Task(Of IdentityModel.Client.TokenResponse)
  name.vb: Task(Of TokenResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Geko.HttpClientService.Models
  commentId: N:Geko.HttpClientService.Models
  name: Geko.HttpClientService.Models
  nameWithType: Geko.HttpClientService.Models
  fullName: Geko.HttpClientService.Models
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
