<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Geko.HttpClientService</name>
    </assembly>
    <members>
        <member name="T:Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions">
            <summary>
            Static object for <see cref="T:Geko.HttpClientService.HttpClientService" /> extensions.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync``1(Geko.HttpClientService.HttpClientService,System.String)">
            <summary>
            Sends a DELETE request to the specified <paramref name="requestUri"/> and returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> in an asynchronous operation.
            
            <list type="table">
             <listheader>The <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> contains the body of the response as:</listheader>
                <item><term><c>String</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property</description></item>
                <item><term><typeparamref name="TResponseBody"/></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property</description></item>
                <item><term><c>Stream</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property</description></item>
            </list>
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended</param>
            <param name="requestUri">A string representing the resource to be called</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property,
            as <typeparamref name="TResponseBody"/> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> and,
            as <c>Stream</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property.
            The <typeparamref name="TResponseBody"/> can be of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync(Geko.HttpClientService.HttpClientService,System.String)">
            <summary>
            Sends a DELETE request to the specified <paramref name="requestUri"/> and returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> in an asynchronous operation.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended</param>
            <param name="requestUri">A string representing the resource to be called</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="T:Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions">
            <summary>
            Static object for <see cref="T:Geko.HttpClientService.HttpClientService" /> extensions.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync``1(Geko.HttpClientService.HttpClientService,System.String)">
            <summary>
            Sends a GET request to the specified <paramref name="requestUri"/> and returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> in an asynchronous operation.
            
            <list type="table">
             <listheader>The <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> contains the body of the response as:</listheader>
                <item><term><c>String</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property</description></item>
                <item><term><typeparamref name="TResponseBody"/></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property</description></item>
                <item><term><c>Stream</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property</description></item>
            </list>
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended</param>
            <param name="requestUri">A string representing the resource to be called</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property,
            as <typeparamref name="TResponseBody"/> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> and,
            as <c>Stream</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property.
            The <typeparamref name="TResponseBody"/> can be of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync(Geko.HttpClientService.HttpClientService,System.String)">
            <summary>
            Sends a GET request to the specified <paramref name="requestUri"/> and returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> in an asynchronous operation.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended</param>
            <param name="requestUri">A string representing the resource to be called</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="T:Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions">
            <summary>
            Static object for <see cref="T:Geko.HttpClientService.HttpClientService" /> extensions.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync``1(Geko.HttpClientService.HttpClientService,System.String)">
            <summary>
            Sends a HEAD request to the specified <paramref name="requestUri"/> and returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> in an asynchronous operation.
            
            <list type="table">
             <listheader>The <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> contains the body of the response as:</listheader>
                <item><term><c>String</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property</description></item>
                <item><term><typeparamref name="TResponseBody"/></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property</description></item>
                <item><term><c>Stream</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property</description></item>
            </list>
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended</param>
            <param name="requestUri">A string representing the resource to be called</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property,
            as <typeparamref name="TResponseBody"/> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> and,
            as <c>Stream</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property.
            The <typeparamref name="TResponseBody"/> can be of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync(Geko.HttpClientService.HttpClientService,System.String)">
            <summary>
            Sends a HEAD request to the specified <paramref name="requestUri"/> and returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> in an asynchronous operation.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended</param>
            <param name="requestUri">A string representing the resource to be called</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="T:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions">
            <summary>
            Static object for <see cref="T:Geko.HttpClientService.HttpClientService" /> extensions.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)">
            <summary>
            Sends a PATCH request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request
            with <typeparamref name="TRequestBody"/> as the type of the <paramref name="requestBody"/>.
            Returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/>.
            <list type="table">
             <listheader>The <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> contains the body of the response as:</listheader>
                <item><term><c>String</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property</description></item>
                <item><term><typeparamref name="TResponseBody"/></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property</description></item>
                <item><term><c>Stream</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property</description></item>
            </list>
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <typeparam name="TRequestBody">
                The type of the request body. The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object that will be serialized and sent in the body of the request.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type that will be sent in the body of the request.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property,
            as <typeparamref name="TResponseBody"/> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> and,
            as <c>Stream</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property.
            The <typeparamref name="TResponseBody"/> can be of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)">
            <summary>
            Sends a PATCH request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)">
            <summary>
            Sends a PATCH request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.Net.Http.StringContent)">
            <summary>
            Sends a PATCH request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.Net.Http.StreamContent)">
            <summary>
            Sends a PATCH request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property.
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="T:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions">
            <summary>
            Static object for <see cref="T:Geko.HttpClientService.HttpClientService" /> extensions.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)">
            <summary>
            Sends a POST request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request
            with <typeparamref name="TRequestBody"/> as the type of the <paramref name="requestBody"/>.
            Returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/>.
            <list type="table">
             <listheader>The <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> contains the body of the response as:</listheader>
                <item><term><c>String</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property</description></item>
                <item><term><typeparamref name="TResponseBody"/></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property</description></item>
                <item><term><c>Stream</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property</description></item>
            </list>
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <typeparam name="TRequestBody">
                The type of the request body. The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object that will be serialized and sent in the body of the request.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type that will be sent in the body of the request.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property,
            as <typeparamref name="TResponseBody"/> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> and,
            as <c>Stream</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property.
            The <typeparamref name="TResponseBody"/> can be of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)">
            <summary>
            Sends a POST request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)">
            <summary>
            Sends a POST request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.Net.Http.StringContent)">
            <summary>
            Sends a POST request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.Net.Http.StreamContent)">
            <summary>
            Sends a POST request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property.
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="T:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions">
            <summary>
            Static object for <see cref="T:Geko.HttpClientService.HttpClientService" /> extensions.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)">
            <summary>
            Sends a PUT request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request
            with <typeparamref name="TRequestBody"/> as the type of the <paramref name="requestBody"/>.
            Returns the response wrapped in a <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/>.
            <list type="table">
             <listheader>The <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> contains the body of the response as:</listheader>
                <item><term><c>String</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property</description></item>
                <item><term><typeparamref name="TResponseBody"/></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property</description></item>
                <item><term><c>Stream</c></term><description> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property</description></item>
            </list>
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <typeparam name="TRequestBody">
                The type of the request body. The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object that will be serialized and sent in the body of the request.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type that will be sent in the body of the request.</description>
                    </item>
                </list>
            </typeparam>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property,
            as <typeparamref name="TResponseBody"/> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> and,
            as <c>Stream</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property.
            The <typeparamref name="TResponseBody"/> can be of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)">
            <summary>
            Sends a PUT request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)">
            <summary>
            Sends a PUT request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.Net.Http.StringContent)">
            <summary>
            Sends a PUT request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.Net.Http.StreamContent)">
            <summary>
            Sends a PUT request to the specified <paramref name="requestUri"/> using <paramref name="requestBody"/> as the body of the request.
            Returns the response in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> property.
            </summary>
            <param name="httpClientService">The <see cref="T:Geko.HttpClientService.HttpClientService"/> that gets extended.</param>
            <param name="requestUri">A string representing the resource to be called.</param>
            <param name="requestBody">The body of the request.</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property.
            </returns>
        </member>
        <member name="T:Geko.HttpClientService.Extensions.ServiceCollectionExtensions">
            <summary>
            Extensions methods for setting up the RequestService in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Extensions.ServiceCollectionExtensions.AddHttpClientService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds services for the RequestService to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to add services to.</param>
            <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> that can be used to further configure the MVC services.</returns>
        </member>
        <member name="T:Geko.HttpClientService.HttpClientService">
            <summary>
            The request service implemantation
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersAdd(System.String,System.String)">
            <summary>
            Adds a header to the request. If a second header with the same name is added, then their values will be aggregated to one <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <param name="name">The name of the header.</param>
            <param name="value">The value of the header.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersAdd(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Adds a header to the request. If a second header with the same name is added, then their values will be aggregated to one <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <param name="name">The name of the header.</param>
            <param name="value">The list of values of the header.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersAdd(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Adds the <paramref name="headers"/> as the headers for the request.
            </summary>
            <param name="headers">A <see cref="T:System.Collections.Generic.Dictionary`2"/> with the key representing the name of the header, and the value representing the value of the header.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds the <paramref name="headers"/> as the headers for the request.
            </summary>
            <param name="headers">A <see cref="T:System.Collections.Generic.Dictionary`2"/> where value is a <see cref="T:System.Collections.Generic.List`1"/> with the key representing the name of the header, and the values representing the values of the header.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersSet(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Clears all headers and sets new
            </summary>
            <param name="headers">A <see cref="T:System.Collections.Generic.Dictionary`2"/> with the key representing the name of the header, and the value representing the value of the header.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersSet(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Clears all headers and sets new
            </summary>
            <param name="headers">A <see cref="T:System.Collections.Generic.Dictionary`2"/> where value is a <see cref="T:System.Collections.Generic.List`1"/> with the key representing the name of the header, and the values representing the values of the header.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersClear">
            <summary>
            Clears all headers from the <see cref="T:System.Net.Http.Headers.HttpHeaders"/> collection.
            </summary>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.HeadersRemove(System.String)">
            <summary>
            Removes the <paramref name="name"/> header from the <see cref="T:System.Net.Http.Headers.HttpHeaders"/> collection.
            </summary>
            <param name="name">The header to be removed</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(Microsoft.Extensions.Options.IOptions{``0})">
            <summary>
            Sets the IdentityServer4 options for retrieving an access token using client credentials.
            </summary>
            <typeparam name="TOptions">The type of the <paramref name="options"/>.</typeparam>
            <param name="options">The token service options.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(System.Action{``0})">
            <summary>
            Sets the IdentityServer4 options for retrieving an access token using client credentials by using a delegate.
            </summary>
            <param name="optionsDelegate">The <see cref="T:System.Action`1"/> delegate.</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(``0)">
            <summary>
            Sets the IdentityServer4 options by passing an object that inherits from <see cref="T:Geko.HttpClientService.Models.ClientCredentialsOptions"/>
            </summary>
            <param name="options">The <see cref="T:Geko.HttpClientService.Models.IIdentityServerOptions"/> that contains the options.</param>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.GetTokenResponse">
            <summary>
            Retrieves the TokenResponse from the IdentityServer
            </summary>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/></returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.SetTimeout(System.TimeSpan)">
            <summary>
            Set the timeout of the current <see cref="T:Geko.HttpClientService.HttpClientService"/>
            </summary>
            <param name="timeout">The timeout</param>
            <returns>Returns the current instance of <see cref="T:Geko.HttpClientService.HttpClientService"/> for method chaining.</returns>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientService.SendAsync``2(System.Uri,System.Net.Http.HttpMethod,``0)">
            <summary>
            Creates and sends a request to the <paramref name="requestUri"/> using the HTTP verb 
             from <paramref name="httpMethod"/> and the request body from <paramref name="requestBody"/>. 
            If IdentityServerOptions are set (using the <see cref="M:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(``0)"/> or one of the overloads), 
            then a valid access token will be fetched by the <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerService"/> and attached to this request. 
            </summary>
            <typeparam name="TResponseBody">
                The type of the property <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> of the <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> object,
                that will contain the body of the response deserialized or casted to type <typeparamref name="TResponseBody"/>. 
                The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </typeparam>
            <typeparam name="TRequestBody">
                The type of the request body. The type used can be one of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object that will be serialized and sent in the body of the request.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type that will be sent in the body of the request.</description>
                    </item>
                </list>
            </typeparam>
            <param name="requestUri">The <see cref="T:System.Uri"/> of the request.</param>
            <param name="httpMethod">The <see cref="T:System.Net.Http.HttpMethod"/> of the request.</param>
            <param name="requestBody">The body of the request (available only in POST, PUT and PATCH).</param>
            <returns>
            A <see cref="T:Geko.HttpClientService.Models.ResponseObject`1"/> containing the body of the response 
            as <c>String</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString"/> property,
            as <typeparamref name="TResponseBody"/> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType"/> and,
            as <c>Stream</c> in the <see cref="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream"/> property.
            The <typeparamref name="TResponseBody"/> can be of the following:
                <list type="bullet">
                    <item>
                        <term><see cref="T:System.Net.Http.StringContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StringContent"/> to define Encoding and/or ContentType for an HTTP content based on string.</description>
                    </item>
                    <item>
                        <term><see cref="T:System.Net.Http.StreamContent"/></term>
                        <description>Use <see cref="T:System.Net.Http.StreamContent"/> to provide HTTP content based on a stream.</description>
                    </item>
                    <item>
                        <term>A serializable complex type</term>
                        <description>Any serializable object to attempt to deserialize the body of the response to it.</description>
                    </item>
                    <item>
                        <term>A simple type</term>
                        <description>Any other simple type to try convert the body of the response to it.</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="T:Geko.HttpClientService.HttpClientServiceFactory">
            <summary>
            A factory that creates <see cref="T:Geko.HttpClientService.HttpClientService"/> instances for a given logical name.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.HttpClientServiceFactory.Instance">
            <summary>
            Lazy Singleton instantiation for use outside of a DI container.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientServiceFactory.#ctor(Geko.HttpClientService.Infrastructure.ICoreHttpClient,Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory,Geko.HttpClientService.Infrastructure.IIdentityServerService)">
            <summary>
            Constructor of the <see cref="T:Geko.HttpClientService.HttpClientServiceFactory" />.
            </summary>
            <param name="coreHttpClient">An <see cref="T:Geko.HttpClientService.Infrastructure.ICoreHttpClient"/> implementation that will execute the HTTP requests.</param>
            <param name="requestMessageFactory">The <see cref="T:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory"/> to get a new <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
            <param name="tokenResponseService">The <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerService"/> to retrieve a token, if required.</param>
        </member>
        <member name="M:Geko.HttpClientService.HttpClientServiceFactory.CreateHttpClientService">
            <summary>
            Creates new <see cref="T:Geko.HttpClientService.HttpClientService"/> instances. 
            </summary>
            <returns>An <see cref="T:Geko.HttpClientService.HttpClientService"/> instance.</returns>
        </member>
        <member name="T:Geko.HttpClientService.IHttpClientServiceFactory">
            <summary>
            An abstraction of the factory that creates <see cref="T:Geko.HttpClientService.HttpClientService"/> instances for a given logical name.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.IHttpClientServiceFactory.CreateHttpClientService">
            <summary>
            Creates new <see cref="T:Geko.HttpClientService.HttpClientService"/> instances. 
            </summary>
            <returns>An <see cref="T:Geko.HttpClientService.HttpClientService"/> instance.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.CoreHttpClient">
            <summary>
            Implementation for a typed <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.CoreHttpClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor of the <see cref="T:Geko.HttpClientService.Infrastructure.CoreHttpClient"/>.
            </summary>
            <param name="httpClient">An <see cref="T:System.Net.Http.HttpClient"/> that will execute the request</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.CoreHttpClient.SetTimeout(System.TimeSpan)">
            <summary>
            Set the timeout for the next request.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.CoreHttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="httpRequestMessage">The <see cref="T:System.Net.Http.HttpResponseMessage"/> to be sent.</param>
            <returns>An <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.HttpClientServiceHeaders">
            <summary>
            A collection of headers and their values as defined in RFC 2616.
            </summary>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory">
            <summary>
            A <see cref="T:System.Net.Http.HttpRequestMessage"/> factory.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions})">
            <summary>
            Constructor of the  <see cref="T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory"/>
            </summary>
            <param name="httpContextAccessor">The <see cref="T:Microsoft.AspNetCore.Http.HttpContextAccessor"/> object to access <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>. </param>
            <param name="options">The HttpClientService options to use. </param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage">
            <summary>
            Adds an <c>X-HttpClientService</c> header in the newly created <see cref="T:System.Net.Http.HttpRequestMessage"/> by copying the <c>X-HttpClientService</c> of the current request.
            If there is no current request or the current request does not contain a <c>X-HttpClientService</c> header, it creates a new one.
            </summary>
            <remarks>This is useful to track in the logs a series of cascading requests between services.</remarks>
            <returns>An <see cref="T:System.Net.Http.HttpRequestMessage"/> to be used by an <see cref="T:System.Net.Http.HttpClient"/>.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop">
            <summary>
            A <see cref="T:System.Net.Http.HttpRequestMessage"/> factory.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor">
            <summary>
            Constructor of the  <see cref="T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory"/>
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage">
            <summary>
            Creates and returns a new <see cref="T:System.Net.Http.HttpRequestMessage"/>
            </summary>
            <returns>An <see cref="T:System.Net.Http.HttpRequestMessage"/> to be used by an <see cref="T:System.Net.Http.HttpClient"/>.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.ICoreHttpClient">
            <summary>
            Abstraction for a typed <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.ICoreHttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="httpRequestMessage">The <see cref="T:System.Net.Http.HttpResponseMessage"/> to be sent</param>
            <returns>An <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.ICoreHttpClient.SetTimeout(System.TimeSpan)">
            <summary>
            Set the timeout for the next request.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory">
            <summary>
            Abstraction for an <see cref="T:System.Net.Http.HttpRequestMessage"/> factory.
            </summary>    
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage">
            <summary>
            Creates a new instance of an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <returns>An <see cref="T:System.Net.Http.HttpRequestMessage"/> to be used by an <see cref="T:System.Net.Http.HttpClient"/>.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.TypeContent`1">
            <summary>
            TypeContent is following the implementation of <see cref="T:System.Net.Http.StringContent"/>.
            Copied from from https://github.com/microsoft/referencesource/blob/master/System/net/System/Net/Http/StringContent.cs
            </summary> 
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0)">
            <summary>
            Creates a new instance of the <see cref="T:Geko.HttpClientService.Infrastructure.TypeContent`1"/> class. 
            Default encoding is "UTF8" and media type "application/json".
            </summary>
            <param name="model">The object of type <typeparamref name="TRequestBody"/> used to initialize the <see cref="T:Geko.HttpClientService.Infrastructure.TypeContent`1"/>.</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0,System.Text.Encoding)">
            <summary>
            Creates a new instance of the <see cref="T:Geko.HttpClientService.Infrastructure.TypeContent`1"/> class.
            Default media type "application/json".
            </summary>
            <param name="model">The object of type <typeparamref name="TRequestBody"/> used to initialize the <see cref="T:Geko.HttpClientService.Infrastructure.TypeContent`1"/>.</param>
            <param name="encoding">The encoding to use for the json that will be added as content.</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0,System.Text.Encoding,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Geko.HttpClientService.Infrastructure.TypeContent`1"/> class.
            </summary>
            <param name="model">The object of type <typeparamref name="TRequestBody"/> used to initialize the <see cref="T:Geko.HttpClientService.Infrastructure.TypeContent`1"/>.</param>
            <param name="encoding">The encoding to use for the json that will be added as content.</param>
            <param name="mediaType">The media type to use for the json that will be added as content.</param>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient">
            <summary>
            The implementation of an access token service for client credentials based on IdentityServer4. 
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.HttpClientOptionsType">
            <summary>
            The type of the <see cref="T:Geko.HttpClientService.Models.IIdentityServerOptions"/> implementation that this HttpClient needs
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor of the <see cref="T:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient"/>.
            </summary>
            <param name="httpClient">An <see cref="T:System.Net.Http.HttpClient"/> that will execute the request</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Creates a unique key to be used as the cache key of the Identity Server access token, by combining infomration from the access token options object.
            See <see cref="T:Geko.HttpClientService.Models.ClientCredentialsOptions"/> for the access token options.
            </summary>
            <param name="options">The token service options</param>
            <returns>Returns a string representing a unique identifier to be used as the caching key, by getting the hashcode of the address, the client and scopes.</returns>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Retrieves a <see cref="T:IdentityModel.Client.TokenResponse"/> from the configured by the <paramref name="options"/>.
            </summary>
            <param name="options">The <see cref="T:Geko.HttpClientService.Models.ClientCredentialsOptions"/> for the IdentityServer4.</param>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/> object.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.PasswordHttpClient">
            <summary>
            The implementation of an access token service for client credentials based on IdentityServer4. 
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Infrastructure.PasswordHttpClient.HttpClientOptionsType">
            <summary>
            The type of the <see cref="T:Geko.HttpClientService.Models.IIdentityServerOptions"/> implementation that this HttpClient needs
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.PasswordHttpClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor of the <see cref="T:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient"/>.
            </summary>
            <param name="httpClient">An <see cref="T:System.Net.Http.HttpClient"/> that will execute the request</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Creates a unique key to be used as the cache key of the Identity Server access token, by combining infomration from the access token options object.
            See <see cref="T:Geko.HttpClientService.Models.PasswordOptions"/> for the access token options.
            </summary>
            <param name="options">The token service options</param>
            <returns>Returns a string representing a unique identifier to be used as the caching key, by getting the hashcode of the address, the client, the username and the scopes.</returns>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Retrieves a <see cref="T:IdentityModel.Client.TokenResponse"/> from the configured by the <paramref name="options"/>.
            </summary>
            <param name="options">The <see cref="T:Geko.HttpClientService.Models.PasswordOptions"/> for the IdentityServer4.</param>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/> object.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector">
            <summary>
            Selects the correct <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient"/> based on <see cref="T:Geko.HttpClientService.Models.IIdentityServerOptions"/>.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor(System.Collections.Generic.IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient})">
            <summary>
            Constructor of the <see cref="T:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector"/>.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Finds the appropriate implementation of <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient"/> based on the <paramref name="options"/>.
            </summary>
            <param name="options">The <paramref name="options"/> for retrieving an access token.</param>
            <returns>An <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient"/>.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.IdentityServerService">
            <summary>
            The implementation of an access token service for client credentials based on IdentityServer4. 
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector,Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)">
            <summary>
            Constructor of the <see cref="T:Geko.HttpClientService.Infrastructure.IdentityServerService"/>.
            </summary>
            <param name="identityServerHttpClientSelector">An Identity Server HTTP client selected that will fetch the correct HTTP client.</param>
            <param name="cache">A cache engine imlementation, to cache the token response.</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Retrieves either a new access token using client credentials or the last valid from the caching engine.
            </summary>
            <param name="options">The token service options.</param>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/> instance.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient">
            <summary>
            Abstraction for a typed <see cref="T:System.Net.Http.HttpClient"/> that will execute the request to the IdentityServer4.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.HttpClientOptionsType">
            <summary>
            The type of the <see cref="T:Geko.HttpClientService.Models.IIdentityServerOptions"/> implementation
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Creates a unique key to be used as the cache key of the Identity Server access token, by combining infomration from the access token options object.
            </summary>
            <param name="options">The token service options</param>
            <returns>Returns a string representing a unique identifier to be used as the caching key.</returns>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Retrieves a <see cref="T:IdentityModel.Client.TokenResponse"/> from the configured by the <paramref name="options"/>.
            </summary>
            <param name="options">The configuration options for the IdentityServer4.</param>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/> object.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector">
            <summary>
            Abstraction for an <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient"/> selector. 
            The correct client is selected based on <see cref="T:Geko.HttpClientService.Models.IIdentityServerOptions"/>.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Finds the appropriate implementation of <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient"/> based on the <paramref name="options"/>
            </summary>
            <param name="options">The <paramref name="options"/> for retrieving an access token</param>
            <returns>An <see cref="T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient"/></returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.IIdentityServerService">
            <summary>
            Abstraction for an access token service.
            </summary>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)">
            <summary>
            Retrieves a <see cref="T:IdentityModel.Client.TokenResponse"/>  from the configured Identity Server
            </summary>
            <param name="options">The token service options</param>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/> instance.</returns>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager">
            <summary>
            Interface for the cache manager for the access token service. 
            </summary>
            <remarks>
            It caches a successful response for the 75% of the expiration time define in the <see cref="T:IdentityModel.Client.TokenResponse"/>. 
            </remarks>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String,System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}})">
            <summary>
            Adds a new <see cref="T:IdentityModel.Client.TokenResponse"/> in the cache by executing the <paramref name="call"/> parameter, or returns an existing cached response.
            </summary>
            <param name="key">The key of the cache entry.</param>
            <param name="call">The delegate the returns a <see cref="T:IdentityModel.Client.TokenResponse"/>.</param>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/>, either just aqcuired or from the cache</returns>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)">
            <summary>
            Removes an entry from the cache
            </summary>
            <param name="key">The key of the cache entry.</param>
        </member>
        <member name="T:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager">
            <summary>
            Cache manager for the IdentityServer4 <see cref="T:IdentityModel.Client.TokenResponse"/>. 
            </summary>
            <remarks>
            It caches a successful response for the 75% of the expiration time define in the <see cref="T:IdentityModel.Client.TokenResponse"/>. 
            </remarks>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Constructor of the <see cref="T:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager"/>.
            </summary>
            <param name="memoryCache">The in-memory cache.</param>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync(System.String,System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}})">
            <summary>
            Adds a new <see cref="T:IdentityModel.Client.TokenResponse"/> in the cache by executing the <paramref name="call"/> parameter, or returns an existing cached response.
            </summary>
            <param name="key">The key of the cache entry.</param>
            <param name="call">The delegate the returns a <see cref="T:IdentityModel.Client.TokenResponse"/>.</param>
            <returns>A <see cref="T:IdentityModel.Client.TokenResponse"/>, either just aqcuired or from the cache</returns>
        </member>
        <member name="M:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.Remove(System.String)">
            <summary>
            Removes an entry from the cache
            </summary>
            <param name="key">The key of the cache entry.</param>
        </member>
        <member name="T:Geko.HttpClientService.Models.IIdentityServerOptions">
            <summary>
            Contract that all IdentityServer options (e.g. <see cref="T:Geko.HttpClientService.Models.ClientCredentialsOptions"/> or <see cref="T:Geko.HttpClientService.Models.PasswordOptions"/>) must implement.
            </summary>
        </member>
        <member name="T:Geko.HttpClientService.Models.ClientCredentialsOptions">
            <summary>
            Model for the client credentials options for IdentityServer4
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ClientCredentialsOptions.Address">
            <summary>
            The address of the access token service.
            (e.g. https://demo.identityserver.io/connect/token)
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ClientCredentialsOptions.ClientId">
            <summary>
            The client id.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ClientCredentialsOptions.ClientSecret">
            <summary>
            The client secret.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ClientCredentialsOptions.Scope">
            <summary>
            A space seperated list of scopes.
            </summary>
        </member>
        <member name="T:Geko.HttpClientService.Models.PasswordOptions">
            <summary>
            Model for the password options for IdentityServer4.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.PasswordOptions.Address">
            <summary>
            The address of the access token service.
            (e.g. https://demo.identityserver.io/connect/token)
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.PasswordOptions.ClientId">
            <summary>
            The client id.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.PasswordOptions.ClientSecret">
            <summary>
            The client secret.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.PasswordOptions.Scope">
            <summary>
            A space seperated list of scopes.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.PasswordOptions.Username">
            <summary>
            The username of the user trying to get access.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.PasswordOptions.Password">
            <summary>
            The password of the user trying to get access.
            It will be hashed using SHA256 before sending it to the IdentityServer.
            </summary>
        </member>
        <member name="T:Geko.HttpClientService.Models.HttpClientServiceOptions">
            <summary>
            Settings for the HttpClientService
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationIdActive">
            <summary>
            A boolean indicating the use or not of the colleration id for logging purposes
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationName">
            <summary>
            The header name of the colleraton id
            </summary>
        </member>
        <member name="T:Geko.HttpClientService.Models.ResponseObject`1">
            <summary>
            An object containing information about the response of the current request.
            </summary>
            <typeparam name="TResponseBody">Type of the body of the response.</typeparam>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.Headers">
            <summary>
            The <see cref="T:System.Net.Http.Headers.HttpResponseHeaders"/>.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType">
            <summary>
            The body of the response converted to <typeparamref name="TResponseBody"/>.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString">
            <summary>
            The body of the response as <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream">
            <summary>
            The body of the response as <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.StatusCode">
            <summary>
            The <see cref="T:System.Net.HttpStatusCode"/> of the response.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.HttpResponseMessage">
            <summary>
            The entire <see cref="T:System.Net.Http.HttpResponseMessage"/> object.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.HttpRequestMessge">
            <summary>
            The entire <see cref="T:System.Net.Http.HttpRequestMessage"/> object for debugging purposes.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.HasError">
            <summary>
            A boolean indicating if there is an error in the current request.
            </summary>
        </member>
        <member name="P:Geko.HttpClientService.Models.ResponseObject`1.Error">
            <summary>
            A description of the error, if any.
            </summary>
        </member>
    </members>
</doc>
