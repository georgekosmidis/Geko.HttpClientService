### YamlMime:XRefMap
sorted: true
references:
- uid: Geko.HttpClientService
  name: Geko.HttpClientService
  href: api/Geko.HttpClientService.html
  commentId: N:Geko.HttpClientService
  fullName: Geko.HttpClientService
  nameWithType: Geko.HttpClientService
- uid: Geko.HttpClientService.Extensions
  name: Geko.HttpClientService.Extensions
  href: api/Geko.HttpClientService.Extensions.html
  commentId: N:Geko.HttpClientService.Extensions
  fullName: Geko.HttpClientService.Extensions
  nameWithType: Geko.HttpClientService.Extensions
- uid: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions
  name: HttpClientServiceDeleteExtensions
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.html
  commentId: T:Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions
  nameWithType: HttpClientServiceDeleteExtensions
- uid: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync(Geko.HttpClientService.HttpClientService,System.String)
  name: DeleteAsync(HttpClientService, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceDeleteExtensions_DeleteAsync_Geko_HttpClientService_HttpClientService_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync(Geko.HttpClientService.HttpClientService,System.String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync(Geko.HttpClientService.HttpClientService, System.String)
  nameWithType: HttpClientServiceDeleteExtensions.DeleteAsync(HttpClientService, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync*
  name: DeleteAsync
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceDeleteExtensions_DeleteAsync_
  commentId: Overload:Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync
  nameWithType: HttpClientServiceDeleteExtensions.DeleteAsync
- uid: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync``1(Geko.HttpClientService.HttpClientService,System.String)
  name: DeleteAsync<TResponseBody>(HttpClientService, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceDeleteExtensions_DeleteAsync__1_Geko_HttpClientService_HttpClientService_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync``1(Geko.HttpClientService.HttpClientService,System.String)
  name.vb: DeleteAsync(Of TResponseBody)(HttpClientService, String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServiceDeleteExtensions.DeleteAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String)
  nameWithType: HttpClientServiceDeleteExtensions.DeleteAsync<TResponseBody>(HttpClientService, String)
  nameWithType.vb: HttpClientServiceDeleteExtensions.DeleteAsync(Of TResponseBody)(HttpClientService, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions
  name: HttpClientServiceGetExtensions
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.html
  commentId: T:Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions
  nameWithType: HttpClientServiceGetExtensions
- uid: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync(Geko.HttpClientService.HttpClientService,System.String)
  name: GetAsync(HttpClientService, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceGetExtensions_GetAsync_Geko_HttpClientService_HttpClientService_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync(Geko.HttpClientService.HttpClientService,System.String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync(Geko.HttpClientService.HttpClientService, System.String)
  nameWithType: HttpClientServiceGetExtensions.GetAsync(HttpClientService, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync*
  name: GetAsync
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceGetExtensions_GetAsync_
  commentId: Overload:Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync
  nameWithType: HttpClientServiceGetExtensions.GetAsync
- uid: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync``1(Geko.HttpClientService.HttpClientService,System.String)
  name: GetAsync<TResponseBody>(HttpClientService, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceGetExtensions_GetAsync__1_Geko_HttpClientService_HttpClientService_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync``1(Geko.HttpClientService.HttpClientService,System.String)
  name.vb: GetAsync(Of TResponseBody)(HttpClientService, String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServiceGetExtensions.GetAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String)
  nameWithType: HttpClientServiceGetExtensions.GetAsync<TResponseBody>(HttpClientService, String)
  nameWithType.vb: HttpClientServiceGetExtensions.GetAsync(Of TResponseBody)(HttpClientService, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions
  name: HttpClientServiceHeadExtensions
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.html
  commentId: T:Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions
  nameWithType: HttpClientServiceHeadExtensions
- uid: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync(Geko.HttpClientService.HttpClientService,System.String)
  name: HeadAsync(HttpClientService, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceHeadExtensions_HeadAsync_Geko_HttpClientService_HttpClientService_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync(Geko.HttpClientService.HttpClientService,System.String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync(Geko.HttpClientService.HttpClientService, System.String)
  nameWithType: HttpClientServiceHeadExtensions.HeadAsync(HttpClientService, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync*
  name: HeadAsync
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceHeadExtensions_HeadAsync_
  commentId: Overload:Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync
  nameWithType: HttpClientServiceHeadExtensions.HeadAsync
- uid: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync``1(Geko.HttpClientService.HttpClientService,System.String)
  name: HeadAsync<TResponseBody>(HttpClientService, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.html#Geko_HttpClientService_Extensions_HttpClientServiceHeadExtensions_HeadAsync__1_Geko_HttpClientService_HttpClientService_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync``1(Geko.HttpClientService.HttpClientService,System.String)
  name.vb: HeadAsync(Of TResponseBody)(HttpClientService, String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServiceHeadExtensions.HeadAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String)
  nameWithType: HttpClientServiceHeadExtensions.HeadAsync<TResponseBody>(HttpClientService, String)
  nameWithType.vb: HttpClientServiceHeadExtensions.HeadAsync(Of TResponseBody)(HttpClientService, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions
  name: HttpClientServicePatchExtensions
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.html
  commentId: T:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions
  nameWithType: HttpClientServicePatchExtensions
- uid: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name: PatchAsync(HttpClientService, String, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePatchExtensions_PatchAsync_Geko_HttpClientService_HttpClientService_System_String_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Geko.HttpClientService.HttpClientService, System.String, System.String)
  nameWithType: HttpClientServicePatchExtensions.PatchAsync(HttpClientService, String, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync*
  name: PatchAsync
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePatchExtensions_PatchAsync_
  commentId: Overload:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync
  nameWithType: HttpClientServicePatchExtensions.PatchAsync
- uid: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,StreamContent)
  name: PatchAsync<TResponseBody>(HttpClientService, String, StreamContent)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePatchExtensions_PatchAsync__1_Geko_HttpClientService_HttpClientService_System_String_StreamContent_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,StreamContent)
  name.vb: PatchAsync(Of TResponseBody)(HttpClientService, String, StreamContent)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, StreamContent)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, StreamContent)
  nameWithType: HttpClientServicePatchExtensions.PatchAsync<TResponseBody>(HttpClientService, String, StreamContent)
  nameWithType.vb: HttpClientServicePatchExtensions.PatchAsync(Of TResponseBody)(HttpClientService, String, StreamContent)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,StringContent)
  name: PatchAsync<TResponseBody>(HttpClientService, String, StringContent)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePatchExtensions_PatchAsync__1_Geko_HttpClientService_HttpClientService_System_String_StringContent_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,StringContent)
  name.vb: PatchAsync(Of TResponseBody)(HttpClientService, String, StringContent)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, StringContent)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, StringContent)
  nameWithType: HttpClientServicePatchExtensions.PatchAsync<TResponseBody>(HttpClientService, String, StringContent)
  nameWithType.vb: HttpClientServicePatchExtensions.PatchAsync(Of TResponseBody)(HttpClientService, String, StringContent)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name: PatchAsync<TResponseBody>(HttpClientService, String, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePatchExtensions_PatchAsync__1_Geko_HttpClientService_HttpClientService_System_String_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name.vb: PatchAsync(Of TResponseBody)(HttpClientService, String, String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, System.String)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, System.String)
  nameWithType: HttpClientServicePatchExtensions.PatchAsync<TResponseBody>(HttpClientService, String, String)
  nameWithType.vb: HttpClientServicePatchExtensions.PatchAsync(Of TResponseBody)(HttpClientService, String, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)
  name: PatchAsync<TRequestBody, TResponseBody>(HttpClientService, String, TRequestBody)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePatchExtensions_PatchAsync__2_Geko_HttpClientService_HttpClientService_System_String___0_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)
  name.vb: PatchAsync(Of TRequestBody, TResponseBody)(HttpClientService, String, TRequestBody)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync<TRequestBody, TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, TRequestBody)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePatchExtensions.PatchAsync(Of TRequestBody, TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, TRequestBody)
  nameWithType: HttpClientServicePatchExtensions.PatchAsync<TRequestBody, TResponseBody>(HttpClientService, String, TRequestBody)
  nameWithType.vb: HttpClientServicePatchExtensions.PatchAsync(Of TRequestBody, TResponseBody)(HttpClientService, String, TRequestBody)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions
  name: HttpClientServicePostExtensions
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.html
  commentId: T:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions
  nameWithType: HttpClientServicePostExtensions
- uid: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name: PostAsync(HttpClientService, String, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePostExtensions_PostAsync_Geko_HttpClientService_HttpClientService_System_String_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Geko.HttpClientService.HttpClientService, System.String, System.String)
  nameWithType: HttpClientServicePostExtensions.PostAsync(HttpClientService, String, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync*
  name: PostAsync
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePostExtensions_PostAsync_
  commentId: Overload:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync
  nameWithType: HttpClientServicePostExtensions.PostAsync
- uid: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,StreamContent)
  name: PostAsync<TResponseBody>(HttpClientService, String, StreamContent)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePostExtensions_PostAsync__1_Geko_HttpClientService_HttpClientService_System_String_StreamContent_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,StreamContent)
  name.vb: PostAsync(Of TResponseBody)(HttpClientService, String, StreamContent)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, StreamContent)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, StreamContent)
  nameWithType: HttpClientServicePostExtensions.PostAsync<TResponseBody>(HttpClientService, String, StreamContent)
  nameWithType.vb: HttpClientServicePostExtensions.PostAsync(Of TResponseBody)(HttpClientService, String, StreamContent)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,StringContent)
  name: PostAsync<TResponseBody>(HttpClientService, String, StringContent)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePostExtensions_PostAsync__1_Geko_HttpClientService_HttpClientService_System_String_StringContent_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,StringContent)
  name.vb: PostAsync(Of TResponseBody)(HttpClientService, String, StringContent)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, StringContent)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, StringContent)
  nameWithType: HttpClientServicePostExtensions.PostAsync<TResponseBody>(HttpClientService, String, StringContent)
  nameWithType.vb: HttpClientServicePostExtensions.PostAsync(Of TResponseBody)(HttpClientService, String, StringContent)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name: PostAsync<TResponseBody>(HttpClientService, String, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePostExtensions_PostAsync__1_Geko_HttpClientService_HttpClientService_System_String_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name.vb: PostAsync(Of TResponseBody)(HttpClientService, String, String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, System.String)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, System.String)
  nameWithType: HttpClientServicePostExtensions.PostAsync<TResponseBody>(HttpClientService, String, String)
  nameWithType.vb: HttpClientServicePostExtensions.PostAsync(Of TResponseBody)(HttpClientService, String, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)
  name: PostAsync<TRequestBody, TResponseBody>(HttpClientService, String, TRequestBody)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePostExtensions_PostAsync__2_Geko_HttpClientService_HttpClientService_System_String___0_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)
  name.vb: PostAsync(Of TRequestBody, TResponseBody)(HttpClientService, String, TRequestBody)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync<TRequestBody, TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, TRequestBody)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePostExtensions.PostAsync(Of TRequestBody, TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, TRequestBody)
  nameWithType: HttpClientServicePostExtensions.PostAsync<TRequestBody, TResponseBody>(HttpClientService, String, TRequestBody)
  nameWithType.vb: HttpClientServicePostExtensions.PostAsync(Of TRequestBody, TResponseBody)(HttpClientService, String, TRequestBody)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions
  name: HttpClientServicePutExtensions
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.html
  commentId: T:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions
  nameWithType: HttpClientServicePutExtensions
- uid: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name: PutAsync(HttpClientService, String, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePutExtensions_PutAsync_Geko_HttpClientService_HttpClientService_System_String_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Geko.HttpClientService.HttpClientService,System.String,System.String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Geko.HttpClientService.HttpClientService, System.String, System.String)
  nameWithType: HttpClientServicePutExtensions.PutAsync(HttpClientService, String, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync*
  name: PutAsync
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePutExtensions_PutAsync_
  commentId: Overload:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync
  nameWithType: HttpClientServicePutExtensions.PutAsync
- uid: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,StreamContent)
  name: PutAsync<TResponseBody>(HttpClientService, String, StreamContent)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePutExtensions_PutAsync__1_Geko_HttpClientService_HttpClientService_System_String_StreamContent_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,StreamContent)
  name.vb: PutAsync(Of TResponseBody)(HttpClientService, String, StreamContent)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, StreamContent)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, StreamContent)
  nameWithType: HttpClientServicePutExtensions.PutAsync<TResponseBody>(HttpClientService, String, StreamContent)
  nameWithType.vb: HttpClientServicePutExtensions.PutAsync(Of TResponseBody)(HttpClientService, String, StreamContent)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,StringContent)
  name: PutAsync<TResponseBody>(HttpClientService, String, StringContent)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePutExtensions_PutAsync__1_Geko_HttpClientService_HttpClientService_System_String_StringContent_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,StringContent)
  name.vb: PutAsync(Of TResponseBody)(HttpClientService, String, StringContent)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, StringContent)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, StringContent)
  nameWithType: HttpClientServicePutExtensions.PutAsync<TResponseBody>(HttpClientService, String, StringContent)
  nameWithType.vb: HttpClientServicePutExtensions.PutAsync(Of TResponseBody)(HttpClientService, String, StringContent)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name: PutAsync<TResponseBody>(HttpClientService, String, String)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePutExtensions_PutAsync__1_Geko_HttpClientService_HttpClientService_System_String_System_String_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``1(Geko.HttpClientService.HttpClientService,System.String,System.String)
  name.vb: PutAsync(Of TResponseBody)(HttpClientService, String, String)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync<TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, System.String)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Of TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, System.String)
  nameWithType: HttpClientServicePutExtensions.PutAsync<TResponseBody>(HttpClientService, String, String)
  nameWithType.vb: HttpClientServicePutExtensions.PutAsync(Of TResponseBody)(HttpClientService, String, String)
- uid: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)
  name: PutAsync<TRequestBody, TResponseBody>(HttpClientService, String, TRequestBody)
  href: api/Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.html#Geko_HttpClientService_Extensions_HttpClientServicePutExtensions_PutAsync__2_Geko_HttpClientService_HttpClientService_System_String___0_
  commentId: M:Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync``2(Geko.HttpClientService.HttpClientService,System.String,``0)
  name.vb: PutAsync(Of TRequestBody, TResponseBody)(HttpClientService, String, TRequestBody)
  fullName: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync<TRequestBody, TResponseBody>(Geko.HttpClientService.HttpClientService, System.String, TRequestBody)
  fullName.vb: Geko.HttpClientService.Extensions.HttpClientServicePutExtensions.PutAsync(Of TRequestBody, TResponseBody)(Geko.HttpClientService.HttpClientService, System.String, TRequestBody)
  nameWithType: HttpClientServicePutExtensions.PutAsync<TRequestBody, TResponseBody>(HttpClientService, String, TRequestBody)
  nameWithType.vb: HttpClientServicePutExtensions.PutAsync(Of TRequestBody, TResponseBody)(HttpClientService, String, TRequestBody)
- uid: Geko.HttpClientService.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Geko.HttpClientService.Extensions.ServiceCollectionExtensions.html
  commentId: T:Geko.HttpClientService.Extensions.ServiceCollectionExtensions
  fullName: Geko.HttpClientService.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Geko.HttpClientService.Extensions.ServiceCollectionExtensions.AddHttpClientService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddHttpClientService(IServiceCollection)
  href: api/Geko.HttpClientService.Extensions.ServiceCollectionExtensions.html#Geko_HttpClientService_Extensions_ServiceCollectionExtensions_AddHttpClientService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Geko.HttpClientService.Extensions.ServiceCollectionExtensions.AddHttpClientService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Geko.HttpClientService.Extensions.ServiceCollectionExtensions.AddHttpClientService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddHttpClientService(IServiceCollection)
- uid: Geko.HttpClientService.Extensions.ServiceCollectionExtensions.AddHttpClientService*
  name: AddHttpClientService
  href: api/Geko.HttpClientService.Extensions.ServiceCollectionExtensions.html#Geko_HttpClientService_Extensions_ServiceCollectionExtensions_AddHttpClientService_
  commentId: Overload:Geko.HttpClientService.Extensions.ServiceCollectionExtensions.AddHttpClientService
  isSpec: "True"
  fullName: Geko.HttpClientService.Extensions.ServiceCollectionExtensions.AddHttpClientService
  nameWithType: ServiceCollectionExtensions.AddHttpClientService
- uid: Geko.HttpClientService.HttpClientService
  name: HttpClientService
  href: api/Geko.HttpClientService.HttpClientService.html
  commentId: T:Geko.HttpClientService.HttpClientService
  fullName: Geko.HttpClientService.HttpClientService
  nameWithType: HttpClientService
- uid: Geko.HttpClientService.HttpClientService.GetTokenResponse
  name: GetTokenResponse()
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_GetTokenResponse
  commentId: M:Geko.HttpClientService.HttpClientService.GetTokenResponse
  fullName: Geko.HttpClientService.HttpClientService.GetTokenResponse()
  nameWithType: HttpClientService.GetTokenResponse()
- uid: Geko.HttpClientService.HttpClientService.GetTokenResponse*
  name: GetTokenResponse
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_GetTokenResponse_
  commentId: Overload:Geko.HttpClientService.HttpClientService.GetTokenResponse
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.GetTokenResponse
  nameWithType: HttpClientService.GetTokenResponse
- uid: Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary{System.String,List{System.String}})
  name: HeadersAdd(Dictionary<String, List<String>>)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersAdd_Dictionary_System_String_List_System_String___
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary{System.String,List{System.String}})
  name.vb: HeadersAdd(Dictionary(Of String, List(Of String)))
  fullName: Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary<System.String, List<System.String>>)
  fullName.vb: Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary(Of System.String, List(Of System.String)))
  nameWithType: HttpClientService.HeadersAdd(Dictionary<String, List<String>>)
  nameWithType.vb: HttpClientService.HeadersAdd(Dictionary(Of String, List(Of String)))
- uid: Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary{System.String,System.String})
  name: HeadersAdd(Dictionary<String, String>)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersAdd_Dictionary_System_String_System_String__
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary{System.String,System.String})
  name.vb: HeadersAdd(Dictionary(Of String, String))
  fullName: Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary<System.String, System.String>)
  fullName.vb: Geko.HttpClientService.HttpClientService.HeadersAdd(Dictionary(Of System.String, System.String))
  nameWithType: HttpClientService.HeadersAdd(Dictionary<String, String>)
  nameWithType.vb: HttpClientService.HeadersAdd(Dictionary(Of String, String))
- uid: Geko.HttpClientService.HttpClientService.HeadersAdd(System.String,List{System.String})
  name: HeadersAdd(String, List<String>)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersAdd_System_String_List_System_String__
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersAdd(System.String,List{System.String})
  name.vb: HeadersAdd(String, List(Of String))
  fullName: Geko.HttpClientService.HttpClientService.HeadersAdd(System.String, List<System.String>)
  fullName.vb: Geko.HttpClientService.HttpClientService.HeadersAdd(System.String, List(Of System.String))
  nameWithType: HttpClientService.HeadersAdd(String, List<String>)
  nameWithType.vb: HttpClientService.HeadersAdd(String, List(Of String))
- uid: Geko.HttpClientService.HttpClientService.HeadersAdd(System.String,System.String)
  name: HeadersAdd(String, String)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersAdd_System_String_System_String_
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersAdd(System.String,System.String)
  fullName: Geko.HttpClientService.HttpClientService.HeadersAdd(System.String, System.String)
  nameWithType: HttpClientService.HeadersAdd(String, String)
- uid: Geko.HttpClientService.HttpClientService.HeadersAdd*
  name: HeadersAdd
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersAdd_
  commentId: Overload:Geko.HttpClientService.HttpClientService.HeadersAdd
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.HeadersAdd
  nameWithType: HttpClientService.HeadersAdd
- uid: Geko.HttpClientService.HttpClientService.HeadersClear
  name: HeadersClear()
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersClear
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersClear
  fullName: Geko.HttpClientService.HttpClientService.HeadersClear()
  nameWithType: HttpClientService.HeadersClear()
- uid: Geko.HttpClientService.HttpClientService.HeadersClear*
  name: HeadersClear
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersClear_
  commentId: Overload:Geko.HttpClientService.HttpClientService.HeadersClear
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.HeadersClear
  nameWithType: HttpClientService.HeadersClear
- uid: Geko.HttpClientService.HttpClientService.HeadersRemove(System.String)
  name: HeadersRemove(String)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersRemove_System_String_
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersRemove(System.String)
  fullName: Geko.HttpClientService.HttpClientService.HeadersRemove(System.String)
  nameWithType: HttpClientService.HeadersRemove(String)
- uid: Geko.HttpClientService.HttpClientService.HeadersRemove*
  name: HeadersRemove
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersRemove_
  commentId: Overload:Geko.HttpClientService.HttpClientService.HeadersRemove
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.HeadersRemove
  nameWithType: HttpClientService.HeadersRemove
- uid: Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary{System.String,List{System.String}})
  name: HeadersSet(Dictionary<String, List<String>>)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersSet_Dictionary_System_String_List_System_String___
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary{System.String,List{System.String}})
  name.vb: HeadersSet(Dictionary(Of String, List(Of String)))
  fullName: Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary<System.String, List<System.String>>)
  fullName.vb: Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary(Of System.String, List(Of System.String)))
  nameWithType: HttpClientService.HeadersSet(Dictionary<String, List<String>>)
  nameWithType.vb: HttpClientService.HeadersSet(Dictionary(Of String, List(Of String)))
- uid: Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary{System.String,System.String})
  name: HeadersSet(Dictionary<String, String>)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersSet_Dictionary_System_String_System_String__
  commentId: M:Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary{System.String,System.String})
  name.vb: HeadersSet(Dictionary(Of String, String))
  fullName: Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary<System.String, System.String>)
  fullName.vb: Geko.HttpClientService.HttpClientService.HeadersSet(Dictionary(Of System.String, System.String))
  nameWithType: HttpClientService.HeadersSet(Dictionary<String, String>)
  nameWithType.vb: HttpClientService.HeadersSet(Dictionary(Of String, String))
- uid: Geko.HttpClientService.HttpClientService.HeadersSet*
  name: HeadersSet
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_HeadersSet_
  commentId: Overload:Geko.HttpClientService.HttpClientService.HeadersSet
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.HeadersSet
  nameWithType: HttpClientService.HeadersSet
- uid: Geko.HttpClientService.HttpClientService.SendAsync*
  name: SendAsync
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SendAsync_
  commentId: Overload:Geko.HttpClientService.HttpClientService.SendAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.SendAsync
  nameWithType: HttpClientService.SendAsync
- uid: Geko.HttpClientService.HttpClientService.SendAsync``2(Uri,HttpMethod,``0)
  name: SendAsync<TRequestBody, TResponseBody>(Uri, HttpMethod, TRequestBody)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SendAsync__2_Uri_HttpMethod___0_
  commentId: M:Geko.HttpClientService.HttpClientService.SendAsync``2(Uri,HttpMethod,``0)
  name.vb: SendAsync(Of TRequestBody, TResponseBody)(Uri, HttpMethod, TRequestBody)
  fullName: Geko.HttpClientService.HttpClientService.SendAsync<TRequestBody, TResponseBody>(Uri, HttpMethod, TRequestBody)
  fullName.vb: Geko.HttpClientService.HttpClientService.SendAsync(Of TRequestBody, TResponseBody)(Uri, HttpMethod, TRequestBody)
  nameWithType: HttpClientService.SendAsync<TRequestBody, TResponseBody>(Uri, HttpMethod, TRequestBody)
  nameWithType.vb: HttpClientService.SendAsync(Of TRequestBody, TResponseBody)(Uri, HttpMethod, TRequestBody)
- uid: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions*
  name: SetIdentityServerOptions
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SetIdentityServerOptions_
  commentId: Overload:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions
  nameWithType: HttpClientService.SetIdentityServerOptions
- uid: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(``0)
  name: SetIdentityServerOptions<TOptions>(TOptions)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SetIdentityServerOptions__1___0_
  commentId: M:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(``0)
  name.vb: SetIdentityServerOptions(Of TOptions)(TOptions)
  fullName: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions<TOptions>(TOptions)
  fullName.vb: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions(Of TOptions)(TOptions)
  nameWithType: HttpClientService.SetIdentityServerOptions<TOptions>(TOptions)
  nameWithType.vb: HttpClientService.SetIdentityServerOptions(Of TOptions)(TOptions)
- uid: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(Action{``0})
  name: SetIdentityServerOptions<TOptions>(Action<TOptions>)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SetIdentityServerOptions__1_Action___0__
  commentId: M:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(Action{``0})
  name.vb: SetIdentityServerOptions(Of TOptions)(Action(Of TOptions))
  fullName: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions<TOptions>(Action<TOptions>)
  fullName.vb: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions(Of TOptions)(Action(Of TOptions))
  nameWithType: HttpClientService.SetIdentityServerOptions<TOptions>(Action<TOptions>)
  nameWithType.vb: HttpClientService.SetIdentityServerOptions(Of TOptions)(Action(Of TOptions))
- uid: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(Microsoft.Extensions.Options.IOptions{``0})
  name: SetIdentityServerOptions<TOptions>(IOptions<TOptions>)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SetIdentityServerOptions__1_Microsoft_Extensions_Options_IOptions___0__
  commentId: M:Geko.HttpClientService.HttpClientService.SetIdentityServerOptions``1(Microsoft.Extensions.Options.IOptions{``0})
  name.vb: SetIdentityServerOptions(Of TOptions)(IOptions(Of TOptions))
  fullName: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions<TOptions>(Microsoft.Extensions.Options.IOptions<TOptions>)
  fullName.vb: Geko.HttpClientService.HttpClientService.SetIdentityServerOptions(Of TOptions)(Microsoft.Extensions.Options.IOptions(Of TOptions))
  nameWithType: HttpClientService.SetIdentityServerOptions<TOptions>(IOptions<TOptions>)
  nameWithType.vb: HttpClientService.SetIdentityServerOptions(Of TOptions)(IOptions(Of TOptions))
- uid: Geko.HttpClientService.HttpClientService.SetTimeout(TimeSpan)
  name: SetTimeout(TimeSpan)
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SetTimeout_TimeSpan_
  commentId: M:Geko.HttpClientService.HttpClientService.SetTimeout(TimeSpan)
  fullName: Geko.HttpClientService.HttpClientService.SetTimeout(TimeSpan)
  nameWithType: HttpClientService.SetTimeout(TimeSpan)
- uid: Geko.HttpClientService.HttpClientService.SetTimeout*
  name: SetTimeout
  href: api/Geko.HttpClientService.HttpClientService.html#Geko_HttpClientService_HttpClientService_SetTimeout_
  commentId: Overload:Geko.HttpClientService.HttpClientService.SetTimeout
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientService.SetTimeout
  nameWithType: HttpClientService.SetTimeout
- uid: Geko.HttpClientService.HttpClientServiceFactory
  name: HttpClientServiceFactory
  href: api/Geko.HttpClientService.HttpClientServiceFactory.html
  commentId: T:Geko.HttpClientService.HttpClientServiceFactory
  fullName: Geko.HttpClientService.HttpClientServiceFactory
  nameWithType: HttpClientServiceFactory
- uid: Geko.HttpClientService.HttpClientServiceFactory.#ctor(Geko.HttpClientService.Infrastructure.ICoreHttpClient,Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory,Geko.HttpClientService.Infrastructure.IIdentityServerService)
  name: HttpClientServiceFactory(ICoreHttpClient, IHttpRequestMessageFactory, IIdentityServerService)
  href: api/Geko.HttpClientService.HttpClientServiceFactory.html#Geko_HttpClientService_HttpClientServiceFactory__ctor_Geko_HttpClientService_Infrastructure_ICoreHttpClient_Geko_HttpClientService_Infrastructure_IHttpRequestMessageFactory_Geko_HttpClientService_Infrastructure_IIdentityServerService_
  commentId: M:Geko.HttpClientService.HttpClientServiceFactory.#ctor(Geko.HttpClientService.Infrastructure.ICoreHttpClient,Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory,Geko.HttpClientService.Infrastructure.IIdentityServerService)
  fullName: Geko.HttpClientService.HttpClientServiceFactory.HttpClientServiceFactory(Geko.HttpClientService.Infrastructure.ICoreHttpClient, Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory, Geko.HttpClientService.Infrastructure.IIdentityServerService)
  nameWithType: HttpClientServiceFactory.HttpClientServiceFactory(ICoreHttpClient, IHttpRequestMessageFactory, IIdentityServerService)
- uid: Geko.HttpClientService.HttpClientServiceFactory.#ctor*
  name: HttpClientServiceFactory
  href: api/Geko.HttpClientService.HttpClientServiceFactory.html#Geko_HttpClientService_HttpClientServiceFactory__ctor_
  commentId: Overload:Geko.HttpClientService.HttpClientServiceFactory.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientServiceFactory.HttpClientServiceFactory
  nameWithType: HttpClientServiceFactory.HttpClientServiceFactory
- uid: Geko.HttpClientService.HttpClientServiceFactory.CreateHttpClientService
  name: CreateHttpClientService()
  href: api/Geko.HttpClientService.HttpClientServiceFactory.html#Geko_HttpClientService_HttpClientServiceFactory_CreateHttpClientService
  commentId: M:Geko.HttpClientService.HttpClientServiceFactory.CreateHttpClientService
  fullName: Geko.HttpClientService.HttpClientServiceFactory.CreateHttpClientService()
  nameWithType: HttpClientServiceFactory.CreateHttpClientService()
- uid: Geko.HttpClientService.HttpClientServiceFactory.CreateHttpClientService*
  name: CreateHttpClientService
  href: api/Geko.HttpClientService.HttpClientServiceFactory.html#Geko_HttpClientService_HttpClientServiceFactory_CreateHttpClientService_
  commentId: Overload:Geko.HttpClientService.HttpClientServiceFactory.CreateHttpClientService
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientServiceFactory.CreateHttpClientService
  nameWithType: HttpClientServiceFactory.CreateHttpClientService
- uid: Geko.HttpClientService.HttpClientServiceFactory.Instance
  name: Instance
  href: api/Geko.HttpClientService.HttpClientServiceFactory.html#Geko_HttpClientService_HttpClientServiceFactory_Instance
  commentId: P:Geko.HttpClientService.HttpClientServiceFactory.Instance
  fullName: Geko.HttpClientService.HttpClientServiceFactory.Instance
  nameWithType: HttpClientServiceFactory.Instance
- uid: Geko.HttpClientService.HttpClientServiceFactory.Instance*
  name: Instance
  href: api/Geko.HttpClientService.HttpClientServiceFactory.html#Geko_HttpClientService_HttpClientServiceFactory_Instance_
  commentId: Overload:Geko.HttpClientService.HttpClientServiceFactory.Instance
  isSpec: "True"
  fullName: Geko.HttpClientService.HttpClientServiceFactory.Instance
  nameWithType: HttpClientServiceFactory.Instance
- uid: Geko.HttpClientService.IHttpClientServiceFactory
  name: IHttpClientServiceFactory
  href: api/Geko.HttpClientService.IHttpClientServiceFactory.html
  commentId: T:Geko.HttpClientService.IHttpClientServiceFactory
  fullName: Geko.HttpClientService.IHttpClientServiceFactory
  nameWithType: IHttpClientServiceFactory
- uid: Geko.HttpClientService.IHttpClientServiceFactory.CreateHttpClientService
  name: CreateHttpClientService()
  href: api/Geko.HttpClientService.IHttpClientServiceFactory.html#Geko_HttpClientService_IHttpClientServiceFactory_CreateHttpClientService
  commentId: M:Geko.HttpClientService.IHttpClientServiceFactory.CreateHttpClientService
  fullName: Geko.HttpClientService.IHttpClientServiceFactory.CreateHttpClientService()
  nameWithType: IHttpClientServiceFactory.CreateHttpClientService()
- uid: Geko.HttpClientService.IHttpClientServiceFactory.CreateHttpClientService*
  name: CreateHttpClientService
  href: api/Geko.HttpClientService.IHttpClientServiceFactory.html#Geko_HttpClientService_IHttpClientServiceFactory_CreateHttpClientService_
  commentId: Overload:Geko.HttpClientService.IHttpClientServiceFactory.CreateHttpClientService
  isSpec: "True"
  fullName: Geko.HttpClientService.IHttpClientServiceFactory.CreateHttpClientService
  nameWithType: IHttpClientServiceFactory.CreateHttpClientService
- uid: Geko.HttpClientService.Infrastructure
  name: Geko.HttpClientService.Infrastructure
  href: api/Geko.HttpClientService.Infrastructure.html
  commentId: N:Geko.HttpClientService.Infrastructure
  fullName: Geko.HttpClientService.Infrastructure
  nameWithType: Geko.HttpClientService.Infrastructure
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient
  name: ClientCredentialsHttpClient
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html
  commentId: T:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient
  nameWithType: ClientCredentialsHttpClient
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.#ctor(HttpClient)
  name: ClientCredentialsHttpClient(HttpClient)
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient__ctor_HttpClient_
  commentId: M:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.#ctor(HttpClient)
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.ClientCredentialsHttpClient(HttpClient)
  nameWithType: ClientCredentialsHttpClient.ClientCredentialsHttpClient(HttpClient)
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.#ctor*
  name: ClientCredentialsHttpClient
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.ClientCredentialsHttpClient
  nameWithType: ClientCredentialsHttpClient.ClientCredentialsHttpClient
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetCacheKey(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient_GetCacheKey_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: ClientCredentialsHttpClient.GetCacheKey(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetCacheKey*
  name: GetCacheKey
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient_GetCacheKey_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetCacheKey
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetCacheKey
  nameWithType: ClientCredentialsHttpClient.GetCacheKey
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetTokenResponseAsync(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient_GetTokenResponseAsync_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: ClientCredentialsHttpClient.GetTokenResponseAsync(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetTokenResponseAsync*
  name: GetTokenResponseAsync
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient_GetTokenResponseAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetTokenResponseAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.GetTokenResponseAsync
  nameWithType: ClientCredentialsHttpClient.GetTokenResponseAsync
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.HttpClientOptionsType
  name: HttpClientOptionsType
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient_HttpClientOptionsType
  commentId: P:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.HttpClientOptionsType
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.HttpClientOptionsType
  nameWithType: ClientCredentialsHttpClient.HttpClientOptionsType
- uid: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.HttpClientOptionsType*
  name: HttpClientOptionsType
  href: api/Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.html#Geko_HttpClientService_Infrastructure_ClientCredentialsHttpClient_HttpClientOptionsType_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.HttpClientOptionsType
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ClientCredentialsHttpClient.HttpClientOptionsType
  nameWithType: ClientCredentialsHttpClient.HttpClientOptionsType
- uid: Geko.HttpClientService.Infrastructure.CoreHttpClient
  name: CoreHttpClient
  href: api/Geko.HttpClientService.Infrastructure.CoreHttpClient.html
  commentId: T:Geko.HttpClientService.Infrastructure.CoreHttpClient
  fullName: Geko.HttpClientService.Infrastructure.CoreHttpClient
  nameWithType: CoreHttpClient
- uid: Geko.HttpClientService.Infrastructure.CoreHttpClient.#ctor(HttpClient)
  name: CoreHttpClient(HttpClient)
  href: api/Geko.HttpClientService.Infrastructure.CoreHttpClient.html#Geko_HttpClientService_Infrastructure_CoreHttpClient__ctor_HttpClient_
  commentId: M:Geko.HttpClientService.Infrastructure.CoreHttpClient.#ctor(HttpClient)
  fullName: Geko.HttpClientService.Infrastructure.CoreHttpClient.CoreHttpClient(HttpClient)
  nameWithType: CoreHttpClient.CoreHttpClient(HttpClient)
- uid: Geko.HttpClientService.Infrastructure.CoreHttpClient.#ctor*
  name: CoreHttpClient
  href: api/Geko.HttpClientService.Infrastructure.CoreHttpClient.html#Geko_HttpClientService_Infrastructure_CoreHttpClient__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.CoreHttpClient.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.CoreHttpClient.CoreHttpClient
  nameWithType: CoreHttpClient.CoreHttpClient
- uid: Geko.HttpClientService.Infrastructure.CoreHttpClient.SendAsync(HttpRequestMessage)
  name: SendAsync(HttpRequestMessage)
  href: api/Geko.HttpClientService.Infrastructure.CoreHttpClient.html#Geko_HttpClientService_Infrastructure_CoreHttpClient_SendAsync_HttpRequestMessage_
  commentId: M:Geko.HttpClientService.Infrastructure.CoreHttpClient.SendAsync(HttpRequestMessage)
  fullName: Geko.HttpClientService.Infrastructure.CoreHttpClient.SendAsync(HttpRequestMessage)
  nameWithType: CoreHttpClient.SendAsync(HttpRequestMessage)
- uid: Geko.HttpClientService.Infrastructure.CoreHttpClient.SendAsync*
  name: SendAsync
  href: api/Geko.HttpClientService.Infrastructure.CoreHttpClient.html#Geko_HttpClientService_Infrastructure_CoreHttpClient_SendAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.CoreHttpClient.SendAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.CoreHttpClient.SendAsync
  nameWithType: CoreHttpClient.SendAsync
- uid: Geko.HttpClientService.Infrastructure.CoreHttpClient.SetTimeout(TimeSpan)
  name: SetTimeout(TimeSpan)
  href: api/Geko.HttpClientService.Infrastructure.CoreHttpClient.html#Geko_HttpClientService_Infrastructure_CoreHttpClient_SetTimeout_TimeSpan_
  commentId: M:Geko.HttpClientService.Infrastructure.CoreHttpClient.SetTimeout(TimeSpan)
  fullName: Geko.HttpClientService.Infrastructure.CoreHttpClient.SetTimeout(TimeSpan)
  nameWithType: CoreHttpClient.SetTimeout(TimeSpan)
- uid: Geko.HttpClientService.Infrastructure.CoreHttpClient.SetTimeout*
  name: SetTimeout
  href: api/Geko.HttpClientService.Infrastructure.CoreHttpClient.html#Geko_HttpClientService_Infrastructure_CoreHttpClient_SetTimeout_
  commentId: Overload:Geko.HttpClientService.Infrastructure.CoreHttpClient.SetTimeout
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.CoreHttpClient.SetTimeout
  nameWithType: CoreHttpClient.SetTimeout
- uid: Geko.HttpClientService.Infrastructure.HttpClientServiceHeaders
  name: HttpClientServiceHeaders
  href: api/Geko.HttpClientService.Infrastructure.HttpClientServiceHeaders.html
  commentId: T:Geko.HttpClientService.Infrastructure.HttpClientServiceHeaders
  fullName: Geko.HttpClientService.Infrastructure.HttpClientServiceHeaders
  nameWithType: HttpClientServiceHeaders
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  name: HttpRequestMessageFactory
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.html
  commentId: T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory
  nameWithType: HttpRequestMessageFactory
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions})
  name: HttpRequestMessageFactory(IHttpContextAccessor, IOptions<HttpClientServiceOptions>)
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactory__ctor_Microsoft_AspNetCore_Http_IHttpContextAccessor_Microsoft_Extensions_Options_IOptions_Geko_HttpClientService_Models_HttpClientServiceOptions__
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{Geko.HttpClientService.Models.HttpClientServiceOptions})
  name.vb: HttpRequestMessageFactory(IHttpContextAccessor, IOptions(Of HttpClientServiceOptions))
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.HttpRequestMessageFactory(Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.Extensions.Options.IOptions<Geko.HttpClientService.Models.HttpClientServiceOptions>)
  fullName.vb: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.HttpRequestMessageFactory(Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.Extensions.Options.IOptions(Of Geko.HttpClientService.Models.HttpClientServiceOptions))
  nameWithType: HttpRequestMessageFactory.HttpRequestMessageFactory(IHttpContextAccessor, IOptions<HttpClientServiceOptions>)
  nameWithType.vb: HttpRequestMessageFactory.HttpRequestMessageFactory(IHttpContextAccessor, IOptions(Of HttpClientServiceOptions))
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor*
  name: HttpRequestMessageFactory
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactory__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.HttpRequestMessageFactory
  nameWithType: HttpRequestMessageFactory.HttpRequestMessageFactory
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  name: CreateRequestMessage()
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactory_CreateRequestMessage
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage()
  nameWithType: HttpRequestMessageFactory.CreateRequestMessage()
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage*
  name: CreateRequestMessage
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactory_CreateRequestMessage_
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactory.CreateRequestMessage
  nameWithType: HttpRequestMessageFactory.CreateRequestMessage
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  name: HttpRequestMessageFactoryDesktop
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.html
  commentId: T:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop
  nameWithType: HttpRequestMessageFactoryDesktop
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor
  name: HttpRequestMessageFactoryDesktop()
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactoryDesktop__ctor
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop()
  nameWithType: HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop()
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor*
  name: HttpRequestMessageFactoryDesktop
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactoryDesktop__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop
  nameWithType: HttpRequestMessageFactoryDesktop.HttpRequestMessageFactoryDesktop
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  name: CreateRequestMessage()
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactoryDesktop_CreateRequestMessage
  commentId: M:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage()
  nameWithType: HttpRequestMessageFactoryDesktop.CreateRequestMessage()
- uid: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage*
  name: CreateRequestMessage
  href: api/Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.html#Geko_HttpClientService_Infrastructure_HttpRequestMessageFactoryDesktop_CreateRequestMessage_
  commentId: Overload:Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.HttpRequestMessageFactoryDesktop.CreateRequestMessage
  nameWithType: HttpRequestMessageFactoryDesktop.CreateRequestMessage
- uid: Geko.HttpClientService.Infrastructure.ICoreHttpClient
  name: ICoreHttpClient
  href: api/Geko.HttpClientService.Infrastructure.ICoreHttpClient.html
  commentId: T:Geko.HttpClientService.Infrastructure.ICoreHttpClient
  fullName: Geko.HttpClientService.Infrastructure.ICoreHttpClient
  nameWithType: ICoreHttpClient
- uid: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SendAsync(HttpRequestMessage)
  name: SendAsync(HttpRequestMessage)
  href: api/Geko.HttpClientService.Infrastructure.ICoreHttpClient.html#Geko_HttpClientService_Infrastructure_ICoreHttpClient_SendAsync_HttpRequestMessage_
  commentId: M:Geko.HttpClientService.Infrastructure.ICoreHttpClient.SendAsync(HttpRequestMessage)
  fullName: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SendAsync(HttpRequestMessage)
  nameWithType: ICoreHttpClient.SendAsync(HttpRequestMessage)
- uid: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SendAsync*
  name: SendAsync
  href: api/Geko.HttpClientService.Infrastructure.ICoreHttpClient.html#Geko_HttpClientService_Infrastructure_ICoreHttpClient_SendAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ICoreHttpClient.SendAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SendAsync
  nameWithType: ICoreHttpClient.SendAsync
- uid: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SetTimeout(TimeSpan)
  name: SetTimeout(TimeSpan)
  href: api/Geko.HttpClientService.Infrastructure.ICoreHttpClient.html#Geko_HttpClientService_Infrastructure_ICoreHttpClient_SetTimeout_TimeSpan_
  commentId: M:Geko.HttpClientService.Infrastructure.ICoreHttpClient.SetTimeout(TimeSpan)
  fullName: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SetTimeout(TimeSpan)
  nameWithType: ICoreHttpClient.SetTimeout(TimeSpan)
- uid: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SetTimeout*
  name: SetTimeout
  href: api/Geko.HttpClientService.Infrastructure.ICoreHttpClient.html#Geko_HttpClientService_Infrastructure_ICoreHttpClient_SetTimeout_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ICoreHttpClient.SetTimeout
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ICoreHttpClient.SetTimeout
  nameWithType: ICoreHttpClient.SetTimeout
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  name: IdentityServerHttpClientSelector
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.html
  commentId: T:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector
  nameWithType: IdentityServerHttpClientSelector
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor(IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient})
  name: IdentityServerHttpClientSelector(IEnumerable<IIdentityServerHttpClient>)
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.html#Geko_HttpClientService_Infrastructure_IdentityServerHttpClientSelector__ctor_IEnumerable_Geko_HttpClientService_Infrastructure_IIdentityServerHttpClient__
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor(IEnumerable{Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient})
  name.vb: IdentityServerHttpClientSelector(IEnumerable(Of IIdentityServerHttpClient))
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable<Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient>)
  fullName.vb: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable(Of Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient))
  nameWithType: IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable<IIdentityServerHttpClient>)
  nameWithType.vb: IdentityServerHttpClientSelector.IdentityServerHttpClientSelector(IEnumerable(Of IIdentityServerHttpClient))
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor*
  name: IdentityServerHttpClientSelector
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.html#Geko_HttpClientService_Infrastructure_IdentityServerHttpClientSelector__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.IdentityServerHttpClientSelector
  nameWithType: IdentityServerHttpClientSelector.IdentityServerHttpClientSelector
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: Get(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.html#Geko_HttpClientService_Infrastructure_IdentityServerHttpClientSelector_Get_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: IdentityServerHttpClientSelector.Get(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get*
  name: Get
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.html#Geko_HttpClientService_Infrastructure_IdentityServerHttpClientSelector_Get_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerHttpClientSelector.Get
  nameWithType: IdentityServerHttpClientSelector.Get
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService
  name: IdentityServerService
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerService.html
  commentId: T:Geko.HttpClientService.Infrastructure.IdentityServerService
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService
  nameWithType: IdentityServerService
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector,Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)
  name: IdentityServerService(IIdentityServerHttpClientSelector, ITokenResponseCacheManager)
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerService.html#Geko_HttpClientService_Infrastructure_IdentityServerService__ctor_Geko_HttpClientService_Infrastructure_IIdentityServerHttpClientSelector_Geko_HttpClientService_Infrastructure_ITokenResponseCacheManager_
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector,Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.IdentityServerService(Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector, Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager)
  nameWithType: IdentityServerService.IdentityServerService(IIdentityServerHttpClientSelector, ITokenResponseCacheManager)
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor*
  name: IdentityServerService
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerService.html#Geko_HttpClientService_Infrastructure_IdentityServerService__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerService.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.IdentityServerService
  nameWithType: IdentityServerService.IdentityServerService
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetTokenResponseAsync(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerService.html#Geko_HttpClientService_Infrastructure_IdentityServerService_GetTokenResponseAsync_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: IdentityServerService.GetTokenResponseAsync(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync*
  name: GetTokenResponseAsync
  href: api/Geko.HttpClientService.Infrastructure.IdentityServerService.html#Geko_HttpClientService_Infrastructure_IdentityServerService_GetTokenResponseAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IdentityServerService.GetTokenResponseAsync
  nameWithType: IdentityServerService.GetTokenResponseAsync
- uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  name: IHttpRequestMessageFactory
  href: api/Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.html
  commentId: T:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory
  nameWithType: IHttpRequestMessageFactory
- uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  name: CreateRequestMessage()
  href: api/Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.html#Geko_HttpClientService_Infrastructure_IHttpRequestMessageFactory_CreateRequestMessage
  commentId: M:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage()
  nameWithType: IHttpRequestMessageFactory.CreateRequestMessage()
- uid: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage*
  name: CreateRequestMessage
  href: api/Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.html#Geko_HttpClientService_Infrastructure_IHttpRequestMessageFactory_CreateRequestMessage_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IHttpRequestMessageFactory.CreateRequestMessage
  nameWithType: IHttpRequestMessageFactory.CreateRequestMessage
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
  name: IIdentityServerHttpClient
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.html
  commentId: T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient
  nameWithType: IIdentityServerHttpClient
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetCacheKey(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClient_GetCacheKey_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: IIdentityServerHttpClient.GetCacheKey(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetCacheKey*
  name: GetCacheKey
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClient_GetCacheKey_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetCacheKey
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetCacheKey
  nameWithType: IIdentityServerHttpClient.GetCacheKey
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetTokenResponseAsync(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClient_GetTokenResponseAsync_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: IIdentityServerHttpClient.GetTokenResponseAsync(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetTokenResponseAsync*
  name: GetTokenResponseAsync
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClient_GetTokenResponseAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetTokenResponseAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.GetTokenResponseAsync
  nameWithType: IIdentityServerHttpClient.GetTokenResponseAsync
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.HttpClientOptionsType
  name: HttpClientOptionsType
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClient_HttpClientOptionsType
  commentId: P:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.HttpClientOptionsType
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.HttpClientOptionsType
  nameWithType: IIdentityServerHttpClient.HttpClientOptionsType
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.HttpClientOptionsType*
  name: HttpClientOptionsType
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClient_HttpClientOptionsType_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.HttpClientOptionsType
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClient.HttpClientOptionsType
  nameWithType: IIdentityServerHttpClient.HttpClientOptionsType
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  name: IIdentityServerHttpClientSelector
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.html
  commentId: T:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector
  nameWithType: IIdentityServerHttpClientSelector
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: Get(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClientSelector_Get_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: IIdentityServerHttpClientSelector.Get(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get*
  name: Get
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.html#Geko_HttpClientService_Infrastructure_IIdentityServerHttpClientSelector_Get_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerHttpClientSelector.Get
  nameWithType: IIdentityServerHttpClientSelector.Get
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerService
  name: IIdentityServerService
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerService.html
  commentId: T:Geko.HttpClientService.Infrastructure.IIdentityServerService
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerService
  nameWithType: IIdentityServerService
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetTokenResponseAsync(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerService.html#Geko_HttpClientService_Infrastructure_IIdentityServerService_GetTokenResponseAsync_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: IIdentityServerService.GetTokenResponseAsync(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync*
  name: GetTokenResponseAsync
  href: api/Geko.HttpClientService.Infrastructure.IIdentityServerService.html#Geko_HttpClientService_Infrastructure_IIdentityServerService_GetTokenResponseAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync
  nameWithType: IIdentityServerService.GetTokenResponseAsync
- uid: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager
  name: ITokenResponseCacheManager
  href: api/Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.html
  commentId: T:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager
  fullName: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager
  nameWithType: ITokenResponseCacheManager
- uid: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String,Func{Task{IdentityModel.Client.TokenResponse}})
  name: AddOrGetExistingAsync(String, Func<Task<TokenResponse>>)
  href: api/Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_ITokenResponseCacheManager_AddOrGetExistingAsync_System_String_Func_Task_IdentityModel_Client_TokenResponse___
  commentId: M:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String,Func{Task{IdentityModel.Client.TokenResponse}})
  name.vb: AddOrGetExistingAsync(String, Func(Of Task(Of TokenResponse)))
  fullName: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String, Func<Task<IdentityModel.Client.TokenResponse>>)
  fullName.vb: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String, Func(Of Task(Of IdentityModel.Client.TokenResponse)))
  nameWithType: ITokenResponseCacheManager.AddOrGetExistingAsync(String, Func<Task<TokenResponse>>)
  nameWithType.vb: ITokenResponseCacheManager.AddOrGetExistingAsync(String, Func(Of Task(Of TokenResponse)))
- uid: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync*
  name: AddOrGetExistingAsync
  href: api/Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_ITokenResponseCacheManager_AddOrGetExistingAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync
  nameWithType: ITokenResponseCacheManager.AddOrGetExistingAsync
- uid: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)
  name: Remove(String)
  href: api/Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_ITokenResponseCacheManager_Remove_System_String_
  commentId: M:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)
  fullName: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)
  nameWithType: ITokenResponseCacheManager.Remove(String)
- uid: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove*
  name: Remove
  href: api/Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_ITokenResponseCacheManager_Remove_
  commentId: Overload:Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove
  nameWithType: ITokenResponseCacheManager.Remove
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient
  name: PasswordHttpClient
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html
  commentId: T:Geko.HttpClientService.Infrastructure.PasswordHttpClient
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient
  nameWithType: PasswordHttpClient
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.#ctor(HttpClient)
  name: PasswordHttpClient(HttpClient)
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient__ctor_HttpClient_
  commentId: M:Geko.HttpClientService.Infrastructure.PasswordHttpClient.#ctor(HttpClient)
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.PasswordHttpClient(HttpClient)
  nameWithType: PasswordHttpClient.PasswordHttpClient(HttpClient)
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.#ctor*
  name: PasswordHttpClient
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.PasswordHttpClient.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.PasswordHttpClient
  nameWithType: PasswordHttpClient.PasswordHttpClient
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetCacheKey(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient_GetCacheKey_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetCacheKey(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: PasswordHttpClient.GetCacheKey(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetCacheKey*
  name: GetCacheKey
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient_GetCacheKey_
  commentId: Overload:Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetCacheKey
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetCacheKey
  nameWithType: PasswordHttpClient.GetCacheKey
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  name: GetTokenResponseAsync(IIdentityServerOptions)
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient_GetTokenResponseAsync_Geko_HttpClientService_Models_IIdentityServerOptions_
  commentId: M:Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetTokenResponseAsync(Geko.HttpClientService.Models.IIdentityServerOptions)
  nameWithType: PasswordHttpClient.GetTokenResponseAsync(IIdentityServerOptions)
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetTokenResponseAsync*
  name: GetTokenResponseAsync
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient_GetTokenResponseAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetTokenResponseAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.GetTokenResponseAsync
  nameWithType: PasswordHttpClient.GetTokenResponseAsync
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.HttpClientOptionsType
  name: HttpClientOptionsType
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient_HttpClientOptionsType
  commentId: P:Geko.HttpClientService.Infrastructure.PasswordHttpClient.HttpClientOptionsType
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.HttpClientOptionsType
  nameWithType: PasswordHttpClient.HttpClientOptionsType
- uid: Geko.HttpClientService.Infrastructure.PasswordHttpClient.HttpClientOptionsType*
  name: HttpClientOptionsType
  href: api/Geko.HttpClientService.Infrastructure.PasswordHttpClient.html#Geko_HttpClientService_Infrastructure_PasswordHttpClient_HttpClientOptionsType_
  commentId: Overload:Geko.HttpClientService.Infrastructure.PasswordHttpClient.HttpClientOptionsType
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.PasswordHttpClient.HttpClientOptionsType
  nameWithType: PasswordHttpClient.HttpClientOptionsType
- uid: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager
  name: TokenResponseCacheManager
  href: api/Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.html
  commentId: T:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager
  fullName: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager
  nameWithType: TokenResponseCacheManager
- uid: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  name: TokenResponseCacheManager(IMemoryCache)
  href: api/Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_TokenResponseCacheManager__ctor_Microsoft_Extensions_Caching_Memory_IMemoryCache_
  commentId: M:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  fullName: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.TokenResponseCacheManager(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  nameWithType: TokenResponseCacheManager.TokenResponseCacheManager(IMemoryCache)
- uid: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.#ctor*
  name: TokenResponseCacheManager
  href: api/Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_TokenResponseCacheManager__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.TokenResponseCacheManager
  nameWithType: TokenResponseCacheManager.TokenResponseCacheManager
- uid: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync(System.String,Func{Task{IdentityModel.Client.TokenResponse}})
  name: AddOrGetExistingAsync(String, Func<Task<TokenResponse>>)
  href: api/Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_TokenResponseCacheManager_AddOrGetExistingAsync_System_String_Func_Task_IdentityModel_Client_TokenResponse___
  commentId: M:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync(System.String,Func{Task{IdentityModel.Client.TokenResponse}})
  name.vb: AddOrGetExistingAsync(String, Func(Of Task(Of TokenResponse)))
  fullName: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync(System.String, Func<Task<IdentityModel.Client.TokenResponse>>)
  fullName.vb: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync(System.String, Func(Of Task(Of IdentityModel.Client.TokenResponse)))
  nameWithType: TokenResponseCacheManager.AddOrGetExistingAsync(String, Func<Task<TokenResponse>>)
  nameWithType.vb: TokenResponseCacheManager.AddOrGetExistingAsync(String, Func(Of Task(Of TokenResponse)))
- uid: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync*
  name: AddOrGetExistingAsync
  href: api/Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_TokenResponseCacheManager_AddOrGetExistingAsync_
  commentId: Overload:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.AddOrGetExistingAsync
  nameWithType: TokenResponseCacheManager.AddOrGetExistingAsync
- uid: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.Remove(System.String)
  name: Remove(String)
  href: api/Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_TokenResponseCacheManager_Remove_System_String_
  commentId: M:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.Remove(System.String)
  fullName: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.Remove(System.String)
  nameWithType: TokenResponseCacheManager.Remove(String)
- uid: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.Remove*
  name: Remove
  href: api/Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.html#Geko_HttpClientService_Infrastructure_TokenResponseCacheManager_Remove_
  commentId: Overload:Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.Remove
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.TokenResponseCacheManager.Remove
  nameWithType: TokenResponseCacheManager.Remove
- uid: Geko.HttpClientService.Infrastructure.TypeContent`1
  name: TypeContent<TRequestBody>
  href: api/Geko.HttpClientService.Infrastructure.TypeContent-1.html
  commentId: T:Geko.HttpClientService.Infrastructure.TypeContent`1
  name.vb: TypeContent(Of TRequestBody)
  fullName: Geko.HttpClientService.Infrastructure.TypeContent<TRequestBody>
  fullName.vb: Geko.HttpClientService.Infrastructure.TypeContent(Of TRequestBody)
  nameWithType: TypeContent<TRequestBody>
  nameWithType.vb: TypeContent(Of TRequestBody)
- uid: Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0)
  name: TypeContent(TRequestBody)
  href: api/Geko.HttpClientService.Infrastructure.TypeContent-1.html#Geko_HttpClientService_Infrastructure_TypeContent_1__ctor__0_
  commentId: M:Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0)
  fullName: Geko.HttpClientService.Infrastructure.TypeContent<TRequestBody>.TypeContent(TRequestBody)
  fullName.vb: Geko.HttpClientService.Infrastructure.TypeContent(Of TRequestBody).TypeContent(TRequestBody)
  nameWithType: TypeContent<TRequestBody>.TypeContent(TRequestBody)
  nameWithType.vb: TypeContent(Of TRequestBody).TypeContent(TRequestBody)
- uid: Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0,System.Text.Encoding)
  name: TypeContent(TRequestBody, Encoding)
  href: api/Geko.HttpClientService.Infrastructure.TypeContent-1.html#Geko_HttpClientService_Infrastructure_TypeContent_1__ctor__0_System_Text_Encoding_
  commentId: M:Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0,System.Text.Encoding)
  fullName: Geko.HttpClientService.Infrastructure.TypeContent<TRequestBody>.TypeContent(TRequestBody, System.Text.Encoding)
  fullName.vb: Geko.HttpClientService.Infrastructure.TypeContent(Of TRequestBody).TypeContent(TRequestBody, System.Text.Encoding)
  nameWithType: TypeContent<TRequestBody>.TypeContent(TRequestBody, Encoding)
  nameWithType.vb: TypeContent(Of TRequestBody).TypeContent(TRequestBody, Encoding)
- uid: Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0,System.Text.Encoding,System.String)
  name: TypeContent(TRequestBody, Encoding, String)
  href: api/Geko.HttpClientService.Infrastructure.TypeContent-1.html#Geko_HttpClientService_Infrastructure_TypeContent_1__ctor__0_System_Text_Encoding_System_String_
  commentId: M:Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor(`0,System.Text.Encoding,System.String)
  fullName: Geko.HttpClientService.Infrastructure.TypeContent<TRequestBody>.TypeContent(TRequestBody, System.Text.Encoding, System.String)
  fullName.vb: Geko.HttpClientService.Infrastructure.TypeContent(Of TRequestBody).TypeContent(TRequestBody, System.Text.Encoding, System.String)
  nameWithType: TypeContent<TRequestBody>.TypeContent(TRequestBody, Encoding, String)
  nameWithType.vb: TypeContent(Of TRequestBody).TypeContent(TRequestBody, Encoding, String)
- uid: Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor*
  name: TypeContent
  href: api/Geko.HttpClientService.Infrastructure.TypeContent-1.html#Geko_HttpClientService_Infrastructure_TypeContent_1__ctor_
  commentId: Overload:Geko.HttpClientService.Infrastructure.TypeContent`1.#ctor
  isSpec: "True"
  fullName: Geko.HttpClientService.Infrastructure.TypeContent<TRequestBody>.TypeContent
  fullName.vb: Geko.HttpClientService.Infrastructure.TypeContent(Of TRequestBody).TypeContent
  nameWithType: TypeContent<TRequestBody>.TypeContent
  nameWithType.vb: TypeContent(Of TRequestBody).TypeContent
- uid: Geko.HttpClientService.Models
  name: Geko.HttpClientService.Models
  href: api/Geko.HttpClientService.Models.html
  commentId: N:Geko.HttpClientService.Models
  fullName: Geko.HttpClientService.Models
  nameWithType: Geko.HttpClientService.Models
- uid: Geko.HttpClientService.Models.
  name: ''
  href: api/Geko.HttpClientService.Models..html
  commentId: T:Geko.HttpClientService.Models.
  fullName: Geko.HttpClientService.Models.
- uid: Geko.HttpClientService.Models.HttpClientServiceOptions
  name: HttpClientServiceOptions
  href: api/Geko.HttpClientService.Models.HttpClientServiceOptions.html
  commentId: T:Geko.HttpClientService.Models.HttpClientServiceOptions
  fullName: Geko.HttpClientService.Models.HttpClientServiceOptions
  nameWithType: HttpClientServiceOptions
- uid: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationIdActive
  name: HeaderCollerationIdActive
  href: api/Geko.HttpClientService.Models.HttpClientServiceOptions.html#Geko_HttpClientService_Models_HttpClientServiceOptions_HeaderCollerationIdActive
  commentId: P:Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationIdActive
  fullName: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationIdActive
  nameWithType: HttpClientServiceOptions.HeaderCollerationIdActive
- uid: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationIdActive*
  name: HeaderCollerationIdActive
  href: api/Geko.HttpClientService.Models.HttpClientServiceOptions.html#Geko_HttpClientService_Models_HttpClientServiceOptions_HeaderCollerationIdActive_
  commentId: Overload:Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationIdActive
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationIdActive
  nameWithType: HttpClientServiceOptions.HeaderCollerationIdActive
- uid: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationName
  name: HeaderCollerationName
  href: api/Geko.HttpClientService.Models.HttpClientServiceOptions.html#Geko_HttpClientService_Models_HttpClientServiceOptions_HeaderCollerationName
  commentId: P:Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationName
  fullName: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationName
  nameWithType: HttpClientServiceOptions.HeaderCollerationName
- uid: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationName*
  name: HeaderCollerationName
  href: api/Geko.HttpClientService.Models.HttpClientServiceOptions.html#Geko_HttpClientService_Models_HttpClientServiceOptions_HeaderCollerationName_
  commentId: Overload:Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationName
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.HttpClientServiceOptions.HeaderCollerationName
  nameWithType: HttpClientServiceOptions.HeaderCollerationName
- uid: Geko.HttpClientService.Models.IIdentityServerOptions
  name: IIdentityServerOptions
  href: api/Geko.HttpClientService.Models.IIdentityServerOptions.html
  commentId: T:Geko.HttpClientService.Models.IIdentityServerOptions
  fullName: Geko.HttpClientService.Models.IIdentityServerOptions
  nameWithType: IIdentityServerOptions
- uid: Geko.HttpClientService.Models.ResponseObject`1
  name: ResponseObject<TResponseBody>
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html
  commentId: T:Geko.HttpClientService.Models.ResponseObject`1
  name.vb: ResponseObject(Of TResponseBody)
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody)
  nameWithType: ResponseObject<TResponseBody>
  nameWithType.vb: ResponseObject(Of TResponseBody)
- uid: Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream
  name: BodyAsStream
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_BodyAsStream
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsStream
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsStream
  nameWithType: ResponseObject<TResponseBody>.BodyAsStream
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsStream
- uid: Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream*
  name: BodyAsStream
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_BodyAsStream_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.BodyAsStream
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsStream
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsStream
  nameWithType: ResponseObject<TResponseBody>.BodyAsStream
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsStream
- uid: Geko.HttpClientService.Models.ResponseObject`1.BodyAsString
  name: BodyAsString
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_BodyAsString
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsString
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsString
  nameWithType: ResponseObject<TResponseBody>.BodyAsString
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsString
- uid: Geko.HttpClientService.Models.ResponseObject`1.BodyAsString*
  name: BodyAsString
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_BodyAsString_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.BodyAsString
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsString
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsString
  nameWithType: ResponseObject<TResponseBody>.BodyAsString
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsString
- uid: Geko.HttpClientService.Models.ResponseObject`1.BodyAsType
  name: BodyAsType
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_BodyAsType
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsType
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsType
  nameWithType: ResponseObject<TResponseBody>.BodyAsType
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsType
- uid: Geko.HttpClientService.Models.ResponseObject`1.BodyAsType*
  name: BodyAsType
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_BodyAsType_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.BodyAsType
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsType
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsType
  nameWithType: ResponseObject<TResponseBody>.BodyAsType
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsType
- uid: Geko.HttpClientService.Models.ResponseObject`1.Error
  name: Error
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_Error
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.Error
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.Error
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).Error
  nameWithType: ResponseObject<TResponseBody>.Error
  nameWithType.vb: ResponseObject(Of TResponseBody).Error
- uid: Geko.HttpClientService.Models.ResponseObject`1.Error*
  name: Error
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_Error_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.Error
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.Error
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).Error
  nameWithType: ResponseObject<TResponseBody>.Error
  nameWithType.vb: ResponseObject(Of TResponseBody).Error
- uid: Geko.HttpClientService.Models.ResponseObject`1.HasError
  name: HasError
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_HasError
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.HasError
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.HasError
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).HasError
  nameWithType: ResponseObject<TResponseBody>.HasError
  nameWithType.vb: ResponseObject(Of TResponseBody).HasError
- uid: Geko.HttpClientService.Models.ResponseObject`1.HasError*
  name: HasError
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_HasError_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.HasError
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.HasError
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).HasError
  nameWithType: ResponseObject<TResponseBody>.HasError
  nameWithType.vb: ResponseObject(Of TResponseBody).HasError
- uid: Geko.HttpClientService.Models.ResponseObject`1.Headers
  name: Headers
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_Headers
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.Headers
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.Headers
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).Headers
  nameWithType: ResponseObject<TResponseBody>.Headers
  nameWithType.vb: ResponseObject(Of TResponseBody).Headers
- uid: Geko.HttpClientService.Models.ResponseObject`1.Headers*
  name: Headers
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_Headers_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.Headers
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.Headers
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).Headers
  nameWithType: ResponseObject<TResponseBody>.Headers
  nameWithType.vb: ResponseObject(Of TResponseBody).Headers
- uid: Geko.HttpClientService.Models.ResponseObject`1.HttpRequestMessge
  name: HttpRequestMessge
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_HttpRequestMessge
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.HttpRequestMessge
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.HttpRequestMessge
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpRequestMessge
  nameWithType: ResponseObject<TResponseBody>.HttpRequestMessge
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpRequestMessge
- uid: Geko.HttpClientService.Models.ResponseObject`1.HttpRequestMessge*
  name: HttpRequestMessge
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_HttpRequestMessge_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.HttpRequestMessge
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.HttpRequestMessge
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpRequestMessge
  nameWithType: ResponseObject<TResponseBody>.HttpRequestMessge
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpRequestMessge
- uid: Geko.HttpClientService.Models.ResponseObject`1.HttpResponseMessage
  name: HttpResponseMessage
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_HttpResponseMessage
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.HttpResponseMessage
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.HttpResponseMessage
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpResponseMessage
  nameWithType: ResponseObject<TResponseBody>.HttpResponseMessage
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpResponseMessage
- uid: Geko.HttpClientService.Models.ResponseObject`1.HttpResponseMessage*
  name: HttpResponseMessage
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_HttpResponseMessage_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.HttpResponseMessage
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.HttpResponseMessage
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpResponseMessage
  nameWithType: ResponseObject<TResponseBody>.HttpResponseMessage
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpResponseMessage
- uid: Geko.HttpClientService.Models.ResponseObject`1.StatusCode
  name: StatusCode
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_StatusCode
  commentId: P:Geko.HttpClientService.Models.ResponseObject`1.StatusCode
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.StatusCode
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).StatusCode
  nameWithType: ResponseObject<TResponseBody>.StatusCode
  nameWithType.vb: ResponseObject(Of TResponseBody).StatusCode
- uid: Geko.HttpClientService.Models.ResponseObject`1.StatusCode*
  name: StatusCode
  href: api/Geko.HttpClientService.Models.ResponseObject-1.html#Geko_HttpClientService_Models_ResponseObject_1_StatusCode_
  commentId: Overload:Geko.HttpClientService.Models.ResponseObject`1.StatusCode
  isSpec: "True"
  fullName: Geko.HttpClientService.Models.ResponseObject<TResponseBody>.StatusCode
  fullName.vb: Geko.HttpClientService.Models.ResponseObject(Of TResponseBody).StatusCode
  nameWithType: ResponseObject<TResponseBody>.StatusCode
  nameWithType.vb: ResponseObject(Of TResponseBody).StatusCode
